{"ast":null,"code":"var _jsxFileName = \"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  isOpen,\n  close,\n  open\n}) {\n  _s();\n\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const [isLogin, setIsLogin] = useState({\n    isLogin: false\n  });\n  const [isLoginOrSignupModalOn, setIsLoginOrSignupModalOn] = useState(false);\n\n  const inputHandler = e => {\n    setLoginInfo({ ...loginInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const loginHandler = () => {\n    setIsLogin(true);\n  };\n\n  const handleLoginOrSignupModal = () => {\n    setIsLoginOrSignupModalOn(true);\n  };\n\n  const loginRequestHandler = () => {\n    axios.post('https://localhost:4000/login', {\n      email: loginInfo.email,\n      password: loginInfo.password\n    }, {\n      'Content-Type': 'application/json',\n      withCredentials: true\n    }).then(res => {\n      if (res.message === 'ok') return loginHandler(true);\n    }).catch(err => alert(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginModal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"closeBtn\",\n          onClick: close,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalContents\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            className: \"loginId\",\n            type: \"text\",\n            placeholder: \"email\",\n            onChange: e => inputHandler(e),\n            value: loginInfo.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            className: \"loginPw\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => inputHandler(e),\n            value: loginInfo.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginBtn\",\n            onClick: loginRequestHandler,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"kakaoBtn\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"kakaoLogo\",\n              src: \"https://developers.kakao.com/tool/resource/static/img/button/kakaolink/kakaolink_btn_medium.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"kakaoText\",\n              children: \"\\uCE74\\uCE74\\uC624 \\uACC4\\uC815\\uC73C\\uB85C \\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpLine\",\n            children: [\"\\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/signup\",\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Login, \"TwQOQ96U9CS80Ut13zQhdceR8R8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/LoginModal.js"],"names":["React","useState","axios","Login","isOpen","close","open","loginInfo","setLoginInfo","email","password","isLogin","setIsLogin","isLoginOrSignupModalOn","setIsLoginOrSignupModalOn","inputHandler","e","target","name","value","loginHandler","handleLoginOrSignupModal","loginRequestHandler","post","withCredentials","then","res","message","catch","err","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginModal.css';\n\nfunction Login({ isOpen, close, open }) {\n    const [loginInfo, setLoginInfo] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [isLogin, setIsLogin] = useState({\n        isLogin: false,\n    });\n\n    const [isLoginOrSignupModalOn, setIsLoginOrSignupModalOn] = useState(false);\n\n    const inputHandler = (e) => {\n        setLoginInfo({ ...loginInfo, [e.target.name]: e.target.value });\n    };\n    const loginHandler = () => {\n        setIsLogin(true);\n    };\n    const handleLoginOrSignupModal = () => {\n        setIsLoginOrSignupModalOn(true);\n    };\n    const loginRequestHandler = () => {\n        axios\n            .post(\n                'https://localhost:4000/login',\n                {\n                    email: loginInfo.email,\n                    password: loginInfo.password,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            )\n            .then((res) => {\n                if (res.message === 'ok') return loginHandler(true);\n            })\n            .catch((err) => alert(err));\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"modal\">\n                    <div className=\"loginModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <div className=\"modalContents\">\n                            <input\n                                name=\"email\"\n                                className=\"loginId\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"loginPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.password}\n                            />\n                            <button className=\"loginBtn\" onClick={loginRequestHandler}>\n                                로그인\n                            </button>\n                            <button className=\"kakaoBtn\">\n                                <img\n                                    className=\"kakaoLogo\"\n                                    src=\"https://developers.kakao.com/tool/resource/static/img/button/kakaolink/kakaolink_btn_medium.png\"\n                                />\n                                <div className=\"kakaoText\">카카오 계정으로 가입</div>\n                            </button>\n                            <div className=\"signUpLine\">\n                                회원이 아니신가요?\n                                <a href=\"/signup\">회원가입</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}