{"ast":null,"code":"var _jsxFileName = \"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/loginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '/loginModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Modal = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n\n  const loginModalHandler = () => {\n    setIsLogin(!isLogin); // isopen 상태 변경 메소드\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      onClick: loginModalHandler,\n      children: /*#__PURE__*/_jsxDEV(ModalBtn, {\n        onClick: loginModalHandler,\n        children: isLogin === true ? \"da\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Modal, \"JvSgsX4M8G46LDE0KxvpuaiuM34=\");\n\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/loginModal.js"],"names":["React","useState","Modal","isLogin","setIsLogin","loginModalHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;;;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV,CAD4B,CAE5B;AACH,GAHD;;AAKA,sBACA;AAAA,2BACI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,iBAAzB;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEA,iBAAnB;AAAA,kBACKF,OAAO,KAAK,IAAZ,GAAmB,IAAnB,GAA0B;AAD/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AASH,CAjBM;;GAAMD,K;;KAAAA,K","sourcesContent":["import React, { useState } from 'react';\nimport '/loginModal.css'\n\n\n\nexport const Modal = () => {\n    const [isLogin, setIsLogin] = useState(false);\n\n    const loginModalHandler = () => {\n        setIsLogin(!isLogin)\n        // isopen 상태 변경 메소드\n    };\n    \n    return (\n    <>\n        <ModalContainer onClick={loginModalHandler}>\n            <ModalBtn onClick={loginModalHandler}>\n                {isLogin === true ? \"da\" : null}\n            </ModalBtn>\n        </ModalContainer>\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}