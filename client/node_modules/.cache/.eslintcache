[{"/Users/suksangmin/THE-TOOPYO/client/src/index.js":"1","/Users/suksangmin/THE-TOOPYO/client/src/App.js":"2","/Users/suksangmin/THE-TOOPYO/client/src/components/Nav/Nav.js":"3","/Users/suksangmin/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js":"4","/Users/suksangmin/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js":"5","/Users/suksangmin/THE-TOOPYO/client/src/pages/CurContent/CurContent.js":"6","/Users/suksangmin/THE-TOOPYO/client/src/pages/NewContent/NewContent.js":"7","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mypage.js":"8","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/SideBar.js":"9","/Users/suksangmin/THE-TOOPYO/client/src/components/Tab/Tab.js":"10","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js":"11","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js":"12","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js":"13","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginBtn.js":"14","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js":"15","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpModal.js":"16","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginModal.js":"17","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchBtn.js":"18","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/Search.js":"19"},{"size":354,"mtime":1630025556432,"results":"20","hashOfConfig":"21"},{"size":1769,"mtime":1630260754167,"results":"22","hashOfConfig":"21"},{"size":1770,"mtime":1630259719712,"results":"23","hashOfConfig":"21"},{"size":3696,"mtime":1630260486733,"results":"24","hashOfConfig":"21"},{"size":5365,"mtime":1630261415402,"results":"25","hashOfConfig":"21"},{"size":4106,"mtime":1630258818402,"results":"26","hashOfConfig":"21"},{"size":2630,"mtime":1630258820517,"results":"27","hashOfConfig":"21"},{"size":206,"mtime":1630165627495,"results":"28","hashOfConfig":"21"},{"size":1830,"mtime":1630178107778,"results":"29","hashOfConfig":"21"},{"size":1535,"mtime":1630052289187,"results":"30","hashOfConfig":"21"},{"size":223,"mtime":1630052289187,"results":"31","hashOfConfig":"21"},{"size":6418,"mtime":1630165627495,"results":"32","hashOfConfig":"21"},{"size":998,"mtime":1630258818402,"results":"33","hashOfConfig":"21"},{"size":606,"mtime":1630258818388,"results":"34","hashOfConfig":"21"},{"size":583,"mtime":1630165627494,"results":"35","hashOfConfig":"21"},{"size":5199,"mtime":1630261623654,"results":"36","hashOfConfig":"21"},{"size":3280,"mtime":1630262674893,"results":"37","hashOfConfig":"21"},{"size":1322,"mtime":1630178107781,"results":"38","hashOfConfig":"21"},{"size":2997,"mtime":1630260158640,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"c0y8jf",{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/suksangmin/THE-TOOPYO/client/src/index.js",["85","86","87"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n",["88","89"],"/Users/suksangmin/THE-TOOPYO/client/src/App.js",["90","91","92","93"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Nav/Nav.js",["94","95","96","97","98"],"import { useState } from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport './Nav.css';\nimport LoginButton from '../Modals/LoginBtn';\nimport SignUpButton from '../Modals/SignUpBtn';\nimport Sidebar from '../SideBar/SideBar';\nimport SearchButton from '../Search/SearchBtn';\n\nfunction Nav({ isLogin, loginHandler }) {\n    return (\n        <nav>\n            <div className=\"navInner\">\n                <Sidebar />\n                <div className=\"logoContainer\">\n                    <h1>\n                        <img className=\"logo\" src=\"\"></img>\n                    </h1>\n                </div>\n                <div>\n                    <ul className=\"buttonContainer\">\n                        <li>\n                            <SearchButton />\n                        </li>\n                        <li>\n                            <Link to=\"/content\">\n                                <button className=\"newContentBtn navBtn\">새 글 작성</button>\n                            </Link>\n                        </li>{' '}\n                        <li>\n                            <SignUpButton loginHandler={loginHandler} />\n                        </li>\n                        {isLogin ? (\n                            <li>\n                                <Link to=\"/Mypage\">\n                                    <button className=\"navBtn\">my page</button>\n                                </Link>\n                            </li>\n                        ) : (\n                            <div>\n                                <LoginButton loginHandler={loginHandler} />\n                            </div>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\nexport default Nav;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js",["99","100","101"],"/Users/suksangmin/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js",["102","103","104"],"/Users/suksangmin/THE-TOOPYO/client/src/pages/CurContent/CurContent.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/pages/NewContent/NewContent.js",["105","106","107","108","109"],"import axios from 'axios';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NewContent.css';\n\nfunction NewContent() {\n    const [information, setInformation] = useState({\n        title: '',\n        description: '',\n        picture_1: '',\n        picture_2: '',\n        description: '',\n        votingDeadLine: '',\n    });\n\n    const [isErr, setIsErr] = useState(false);\n    const isErrHandler = () => {\n        setIsErr(isErr ? false : true);\n    };\n\n    const handleInputValue = (key) => (e) => {\n        setInformation({ ...information, [key]: e.target.value });\n    };\n\n    const uploadHandler = () => {\n        //if()\n        axios\n            .post('https://localhost:4000/content', {\n                userId: '',\n                title: information.title,\n                picture_1: information.picture_1,\n                picture_2: information.picture_2,\n                description: information.description,\n                votingDeadLine: information.votingDeadLine,\n            })\n            .then((res) => {\n                if (res.message === 'please rewrite') return isErrHandler();\n            });\n    };\n\n    return (\n        <div id=\"inner\">\n            <h1 id=\"newTitle\">새 글 작성</h1>\n            <form action=\"\" method=\"post\">\n                {/*action=\"데이터보낼 서버의 파일\"*/}\n                <input\n                    className=\"title\"\n                    maxlength=\"20\"\n                    autoFocus\n                    required\n                    placeholder=\"제목을 입력하세요\"\n                    onChange={handleInputValue}></input>\n                <button type=\"submit\" onClick={uploadHandler}>\n                    <img\n                        src=\"https://cdn.discordapp.com/attachments/877171336508739646/880754762616819732/NewSubmitBtn.png\"\n                        id=\"NewSubmit\"></img>\n                </button>\n                <div className=\"NewContentFrame\">\n                    <div className=\"pic Left\">\n                        <img className=\"picBg\"></img>\n                        <input id=\"pic_1\" type=\"file\"></input>\n                    </div>\n                    {/* <progress id=\"uploadPic_1\" max=\"100\"></progress> */}\n                    <div className=\"pic Right\">\n                        <img className=\"picBg\" src=\"\"></img>\n                        <input id=\"pic_2\" type=\"file\"></input>\n                    </div>\n                    <input className=\"NewDesc\" type=\"text\" placeholder=\"설명을 입력해주세요.\"></input>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default NewContent;\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mypage.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/SideBar.js",["110","111"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SidebarItem from './Sidebaritem';\nimport './SideBar.css';\nimport SignUpButton from '../Modals/SignUpBtn';\n\nfunction Sidebar() {\n    const menus = [\n        { name: '홈', path: '/' },\n        { name: '회원가입', path: '/signup' },\n        { name: '새 글 작성', path: '/content' },\n    ];\n    const [isOpen, setisOpen] = useState(false);\n    const sidebarHandler = () => {\n        setisOpen(!isOpen);\n    };\n    return (\n        <div className=\"sidebar\">\n            <div class=\"btn-menu\">\n                <a class=\"sidebarBtn\" onClick={sidebarHandler}>\n                    <svg width=\"4vh\" height=\"4vw\" viewBox=\"0 0 18 14\" fill=\"none\">\n                        <rect y=\"0.1vh\" width=\"4.5vh\" height=\"0.25vw\" fill=\"white\"></rect>\n                        <rect x=\"0.6vh\" y=\"1.25vh\" width=\"3vh\" height=\"0.25vw\" fill=\"white\"></rect>\n                        <rect y=\"2.4vh\" width=\"4.5vh\" height=\"0.25vw\" fill=\"white\"></rect>\n                    </svg>\n                </a>\n            </div>\n            {isOpen === true ? (\n                <div className=\"sidebarBack\" onClick={sidebarHandler}>\n                    <div className=\"sidebarContents\">\n                        <button className=\"sidebarCloseBtn\" onClick={sidebarHandler}>\n                            X\n                        </button>\n                        {menus.map((menu, index) => {\n                            return (\n                                <Link to={menu.path} key={index}>\n                                    <SidebarItem menu={menu} />\n                                </Link>\n                            );\n                        })}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n}\nexport default Sidebar;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Tab/Tab.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js",["112","113","114"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Mypage.css';\n\nexport default function MypageDetail(props) {\n    const info = props.data.userInfo;\n    const [isClick, setIsClick] = useState(false);\n    const [patchInfo, setPatchInfo] = useState({\n        nickName: '',\n        email: '',\n        password: '',\n        profile_img: '',\n        phone: '', // 초기값에 info.data.userInfo\n    });\n    const clickHandler = () => {\n        setIsClick(!isClick);\n    };\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setPatchInfo({ ...patchInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setPatchInfo({ ...patchInfo, [e.target.name]: e.target.value });\n    };\n    const patchRequestHandler = () => {\n        if (\n            !patchInfo.nickname ||\n            !patchInfo.email ||\n            !patchInfo.password ||\n            !patchInfo.profile_img ||\n            !patchInfo.phone\n        ) {\n        } else {\n            axios.patch(\n                'https://localhost:4000/user/:id',\n                {\n                    nickName: patchInfo.nickName,\n                    email: patchInfo.email,\n                    password: patchInfo.password,\n                    profile_img: patchInfo.profile_img,\n                    phone: patchInfo.phone,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            ); // 또 뭐 담아야하징 헤더 auth?\n        }\n    };\n\n    return (\n        <>\n            {isClick ? (\n                <form>\n                    <h1>안녕하세요 info.name님</h1>\n                    <div className=\"pf-input-area\">\n                        <a className=\"profile_img\">\n                            <div className=\"label\">프로필 사진</div>\n                            <input\n                                name=\"profile_img\"\n                                type=\"file\"\n                                className=\"avatar\"\n                                onChange={(e) => fileEvent(e)}\n                                value={patchInfo.profile_img}></input>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div>info.id</div>\n                        </div>\n                        <div className=\"password\">\n                            <div className=\"label\">비밀번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"비밀번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.password}></input>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"nickName\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"닉네임을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.nickName}></input>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"email\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"이메일을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.email}></input>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"phone\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"전화번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.phone}></input>\n                        </div>\n                        <input type=\"submit\" value=\"저장\" onClick={patchRequestHandler} />\n                    </div>\n                </form>\n            ) : (\n                <div>\n                    <h1>안녕하세요 info.nickName님</h1>\n                    <div className=\"pfArea\">\n                        <a className=\"pfImg\">\n                            <div className=\"label\">프로필 사진</div>\n                            <div type=\"file\" className=\"avatar\">\n                                이미지\n                            </div>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div className=\"id\">info.id</div>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <div>info.nickName</div>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <div>info.email</div>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <div>info.phone</div>\n                        </div>\n                    </div>\n                    <button classname=\"editBtn\" onClick={clickHandler}>\n                        수정\n                    </button>\n                </div>\n            )}\n        </>\n    );\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js",["115","116"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport Thumbnail from '../../components/Thumbnail/Thumbnail';\n\nexport default function Mycontent(props) {\n    const info = props.userInfo;\n    const [contentList, setContentList] = useState([]);\n    const [auth, setAuth] = useState('');\n\n    const getContentList = () => {\n        axios.get('https://localhost:4000/content').then((res) => {\n            setContentList(res.data.content);\n        });\n    };\n    const filteredContents = contentList.filter((el) => {\n        return el.writer.id === info.nickName;\n    });\n    getContentList();\n    return (\n        <>\n            <h1>안녕하세요 info.name님</h1>\n            <div>\n                <ul>\n                    {filteredContents.map((list) => {\n                        <li>\n                            <Thumbnail list={list} auth={auth}></Thumbnail>\n                        </li>;\n                    })}\n                </ul>\n            </div>\n        </>\n    );\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpModal.js",["117"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginModal.js",["118"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Search/Search.js",["119"],{"ruleId":"120","severity":1,"message":"121","line":3,"column":25,"nodeType":"122","messageId":"123","endLine":3,"endColumn":30},{"ruleId":"120","severity":1,"message":"124","line":3,"column":32,"nodeType":"122","messageId":"123","endLine":3,"endColumn":38},{"ruleId":"120","severity":1,"message":"125","line":3,"column":40,"nodeType":"122","messageId":"123","endLine":3,"endColumn":44},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"120","severity":1,"message":"130","line":3,"column":40,"nodeType":"122","messageId":"123","endLine":3,"endColumn":48},{"ruleId":"120","severity":1,"message":"131","line":3,"column":50,"nodeType":"122","messageId":"123","endLine":3,"endColumn":59},{"ruleId":"120","severity":1,"message":"132","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"120","severity":1,"message":"133","line":14,"column":12,"nodeType":"122","messageId":"123","endLine":14,"endColumn":16},{"ruleId":"120","severity":1,"message":"134","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":2,"column":18,"nodeType":"122","messageId":"123","endLine":2,"endColumn":23},{"ruleId":"120","severity":1,"message":"130","line":2,"column":25,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":16,"column":25,"nodeType":"137","endLine":16,"endColumn":54},{"ruleId":"135","severity":1,"message":"136","line":25,"column":25,"nodeType":"137","endLine":25,"endColumn":73},{"ruleId":"135","severity":1,"message":"136","line":27,"column":25,"nodeType":"137","endLine":27,"endColumn":73},{"ruleId":"138","severity":1,"message":"139","line":38,"column":1,"nodeType":"140","messageId":"141","endLine":98,"endColumn":2},{"ruleId":"120","severity":1,"message":"142","line":15,"column":12,"nodeType":"122","messageId":"123","endLine":15,"endColumn":24},{"ruleId":"120","severity":1,"message":"143","line":16,"column":12,"nodeType":"122","messageId":"123","endLine":16,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":79,"column":29,"nodeType":"137","endLine":79,"endColumn":59},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":12,"column":9,"nodeType":"146","messageId":"147","endLine":12,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":54,"column":21,"nodeType":"137","endLine":56,"endColumn":40},{"ruleId":"135","severity":1,"message":"136","line":60,"column":25,"nodeType":"137","endLine":60,"endColumn":48},{"ruleId":"135","severity":1,"message":"136","line":65,"column":25,"nodeType":"137","endLine":65,"endColumn":55},{"ruleId":"120","severity":1,"message":"148","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":20,"column":17,"nodeType":"137","endLine":20,"endColumn":64},{"ruleId":"120","severity":1,"message":"151","line":6,"column":11,"nodeType":"122","messageId":"123","endLine":6,"endColumn":15},{"ruleId":"149","severity":1,"message":"150","line":58,"column":25,"nodeType":"137","endLine":58,"endColumn":52},{"ruleId":"149","severity":1,"message":"150","line":121,"column":25,"nodeType":"137","endLine":121,"endColumn":46},{"ruleId":"120","severity":1,"message":"152","line":8,"column":18,"nodeType":"122","messageId":"123","endLine":8,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":24,"column":50,"nodeType":"155","messageId":"156","endLine":24,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":70,"column":33,"nodeType":"137","endLine":70,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":64,"column":33,"nodeType":"137","endLine":67,"endColumn":35},{"ruleId":"120","severity":1,"message":"157","line":23,"column":11,"nodeType":"122","messageId":"123","endLine":23,"endColumn":24},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"'Redirect' is defined but never used.","'useParams' is defined but never used.","'CurContent' is defined but never used.","'auth' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'errorMessage' is assigned a value but never used.","'isLogin' is assigned a value but never used.","no-dupe-keys","Duplicate key 'description'.","ObjectExpression","unexpected","'SignUpButton' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'info' is assigned a value but never used.","'setAuth' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'searchRefresh' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]