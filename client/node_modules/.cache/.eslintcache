[{"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/index.js":"1","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/App.js":"2","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/loginModal.js":"3","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/loginBtn.js":"4","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/LoginBtn.js":"5","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/LoginModal.js":"6","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js":"7","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/SideBar/SideBar.js":"8","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js":"9","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Nav.js":"10","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Thumbnail.js":"11","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/SignUpBtn.js":"12","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/CurContent/CurContent.js":"13","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/SignUpModal.js":"14","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Tab/Tab.js":"15","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js":"16","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Mypage/Mypage.js":"17","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js":"18","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/search/search.js":"19","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/search/Search.js":"20","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/search/SearchBtn.js":"21","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/LoginBtn.js":"22","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/LoginModal.js":"23","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Search/SearchBtn.js":"24","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Search/Search.js":"25","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js":"26","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/SignUpModal.js":"27","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Login/LoginPage.js":"28"},{"size":354,"mtime":1630069543005,"results":"29","hashOfConfig":"30"},{"size":2263,"mtime":1630285774278,"results":"31","hashOfConfig":"30"},{"size":3354,"mtime":1629890011231,"results":"32","hashOfConfig":"30"},{"size":524,"mtime":1629889832160,"results":"33","hashOfConfig":"30"},{"size":562,"mtime":1630134928419,"results":"34","hashOfConfig":"30"},{"size":3208,"mtime":1630134811971,"results":"35","hashOfConfig":"30"},{"size":5268,"mtime":1630157329411,"results":"36","hashOfConfig":"30"},{"size":1783,"mtime":1630285351145,"results":"37","hashOfConfig":"30"},{"size":223,"mtime":1630171084104,"results":"38","hashOfConfig":"30"},{"size":1766,"mtime":1630160046056,"results":"39","hashOfConfig":"30"},{"size":1116,"mtime":1630165606089,"results":"40","hashOfConfig":"30"},{"size":583,"mtime":1630135431311,"results":"41","hashOfConfig":"30"},{"size":4112,"mtime":1630069543005,"results":"42","hashOfConfig":"30"},{"size":5311,"mtime":1630137622536,"results":"43","hashOfConfig":"30"},{"size":1535,"mtime":1630033737286,"results":"44","hashOfConfig":"30"},{"size":6418,"mtime":1630163368109,"results":"45","hashOfConfig":"30"},{"size":206,"mtime":1630162298120,"results":"46","hashOfConfig":"30"},{"size":988,"mtime":1630170670657,"results":"47","hashOfConfig":"30"},{"size":535,"mtime":1630050241219,"results":"48","hashOfConfig":"30"},{"size":3158,"mtime":1630138221182,"results":"49","hashOfConfig":"30"},{"size":1321,"mtime":1630137334020,"results":"50","hashOfConfig":"30"},{"size":562,"mtime":1630284969020,"results":"51","hashOfConfig":"30"},{"size":3241,"mtime":1630170759738,"results":"52","hashOfConfig":"30"},{"size":1322,"mtime":1630169836512,"results":"53","hashOfConfig":"30"},{"size":2989,"mtime":1630169870554,"results":"54","hashOfConfig":"30"},{"size":583,"mtime":1630135431311,"results":"55","hashOfConfig":"30"},{"size":5216,"mtime":1630168007159,"results":"56","hashOfConfig":"30"},{"size":2921,"mtime":1630285760603,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"tb56og",{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/index.js",["128","129","130"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n",["131","132"],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/App.js",["133","134","135"],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/loginModal.js",["136","137","138","139"],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/loginBtn.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/LoginBtn.js",[],["140","141"],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/LoginModal.js",["142"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Modal.css';\n\nfunction Login({ isOpen, close, loginHandler }) {\n    const [loginInfo, setLoginInfo] = useState({\n        email: '',\n        password: '',\n    });\n\n    const inputHandler = (e) => {\n        setLoginInfo({ ...loginInfo, [e.target.name]: e.target.value });\n    };\n\n    const loginRequestHandler = () => {\n        axios\n            .post(\n                'https://localhost:4000/login',\n                {\n                    email: loginInfo.email,\n                    password: loginInfo.password,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            )\n            .then((res) => {\n                if (res.message === 'ok') {\n                    return loginHandler(res.cookies);\n                }\n            })\n            .catch((err) => alert(err));\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"modal\">\n                    <div className=\"loginModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n\n                        <div className=\"modalContents\">\n                            <span className=\"title\">Login</span>\n                            <input\n                                name=\"email\"\n                                className=\"loginId\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"loginPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.password}\n                            />\n                            <button className=\"loginBtn\" onClick={loginRequestHandler}>\n                                로그인\n                            </button>\n                            <button className=\"kakaoBtn\">\n                                <img\n                                    className=\"kakaoLogo\"\n                                    src=\"https://developers.kakao.com/tool/resource/static/img/button/kakaolink/kakaolink_btn_medium.png\"\n                                />\n                                <div className=\"kakaoText\">카카오 계정으로 가입</div>\n                            </button>\n                            <div className=\"signUpLine\">\n                                회원이 아니신가요?\n                                <Link to=\"/signup\" onClick={close}>\n                                    회원가입\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Login;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js",["143","144","145"],"import React, { useState } from 'react';\nimport './SignUp.css';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction SignupPage() {\n    const [signupInfo, setSignupInfo] = useState({\n        picture: '',\n        provider: '',\n        nickName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n    });\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [isLogin, setIsLogin] = useState({\n        isLogin: false,\n    });\n    const history = useHistory();\n\n    const loginHandler = () => {\n        setIsLogin(true);\n    };\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            !signupInfo.picture ||\n            !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.phoneNumber\n        ) {\n            setErrorMessage(true);\n        } else {\n            axios\n                .post(\n                    'https://localhost:4000/signup',\n                    {\n                        picture: signupInfo.picture,\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        phoneNumber: signupInfo.mobile,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                });\n        }\n    };\n    return (\n        <>\n            <div className=\"back\">\n                <div className=\"signupModal\">\n                    <Link to=\"/\" className=\"closeB\">\n                        X\n                    </Link>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <div className=\"modalContents\">\n                            <img className=\"signUpIcon\" />\n                            <h1>Sign Up</h1>\n                            <div>모든 항목은 필수입니다.</div>\n                            <input\n                                name=\"email\"\n                                className=\"signUpId\"\n                                type=\"email\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"signUpPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.password}\n                            />\n                            <input\n                                name=\"nickName\"\n                                className=\"signUpNickName\"\n                                type=\"text\"\n                                placeholder=\"nickname\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.nickName}\n                            />\n                            <input\n                                name=\"phoneNumber\"\n                                className=\"signUpMobile\"\n                                type=\"tel\"\n                                placeholder=\"-없이 숫자만 입력하세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.phoneNumber}\n                            />\n                            <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                            <input\n                                name=\"picture\"\n                                className=\"signUpPic\"\n                                type=\"file\"\n                                placeholder=\"picture\"\n                                onChange={fileEvent}\n                                value={signupInfo.picture}\n                            />\n                            <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                {' '}\n                                회원가입\n                            </button>\n                            <div className=\"loginLine\">\n                                이미 아이디가 있으신가요?\n                                <Link to=\"/\">로그인</Link>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignupPage;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/SideBar/SideBar.js",["146"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SidebarItem from './Sidebaritem';\nimport './SideBar.css';\n\nfunction Sidebar() {\n    const menus = [\n        { name: '홈', path: '/' },\n        { name: '회원가입', path: '/signup' },\n        { name: '새 글 작성', path: '/content' },\n        { name: '로그인', path: '/login' },\n    ];\n    const [isOpen, setisOpen] = useState(false);\n    const sidebarHandler = () => {\n        setisOpen(!isOpen);\n    };\n    return (\n        <div className=\"sidebar\">\n            <div class=\"btn-menu\">\n                <a class=\"sidebarBtn\" onClick={sidebarHandler}>\n                    <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 14\" fill=\"none\">\n                        <rect width=\"18\" height=\"2\" fill=\"white\"></rect>\n                        <rect x=\"6\" y=\"6\" width=\"12\" height=\"2\" fill=\"white\"></rect>\n                        <rect y=\"12\" width=\"18\" height=\"2\" fill=\"white\"></rect>\n                    </svg>\n                </a>\n            </div>\n            {isOpen === true ? (\n                <div className=\"sidebarBack\" onClick={sidebarHandler}>\n                    <div className=\"sidebarContents\">\n                        <button className=\"sidebarCloseBtn\" onClick={sidebarHandler}>\n                            X\n                        </button>\n                        {menus.map((menu, index) => {\n                            return (\n                                <Link to={menu.path} key={index}>\n                                    <SidebarItem menu={menu} />\n                                </Link>\n                            );\n                        })}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n}\nexport default Sidebar;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Nav.js",["147","148","149","150","151"],"import { useState } from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport './Nav.css';\nimport LoginButton from './Modals/LoginBtn';\nimport SignUpButton from './Modals/SignUpBtn';\nimport Sidebar from './SideBar/SideBar';\nimport SearchButton from './Search/SearchBtn';\n\nfunction Nav({ isLogin, loginHandler }) {\n    return (\n        <nav>\n            <div className=\"navInner\">\n                <Sidebar />\n                <div className=\"logoContainer\">\n                    <h1>\n                        <img className=\"logo\" src=\"\"></img>\n                    </h1>\n                </div>\n                <div>\n                    <ul className=\"buttonContainer\">\n                        <li>\n                            <SearchButton />\n                        </li>\n                        <li>\n                            <Link to=\"/content\">\n                                <button className=\"newContentBtn navBtn\">새 글 작성</button>\n                            </Link>\n                        </li>{' '}\n                        <li>\n                            <SignUpButton loginHandler={loginHandler} />\n                        </li>\n                        {isLogin ? (\n                            <li>\n                                <Link to=\"/Mypage\">\n                                    <button className=\"navBtn\">my page</button>\n                                </Link>\n                            </li>\n                        ) : (\n                            <div>\n                                <LoginButton loginHandler={loginHandler} />\n                            </div>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\nexport default Nav;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Thumbnail.js",["152","153"],"import axios from 'axios';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport CurContent from '../pages/CurContent/CurContent';\n\nfunction Thumbnail({ list }) {\n    const [content, setContent] = useState({}); // 게시글 정보\n    const [writer, setWriter] = useState({}); // 작성자 정보\n\n    const getContentDetail = () => {\n        axios.get(`https://localhost:4000/content/:${list.id}`, { headers: { authorization: '' } }).then((res) => {\n            setContent(res.data.content);\n            setWriter(res.data.writer);\n        });\n    };\n\n    return (\n        <Link to=\"/CurContent\">\n            <CurContent id={list.id} writer={writer} content={content}>\n                <div onClick={getContentDetail}>\n                    <h1>{list.title}title</h1>\n                    <img className=\"picture_1\" src={list.picture_1}></img>\n                    <img className=\"picture_2\" src={list.picture_2}></img>\n                    <div className=\"descript\">{list.description}</div>\n                </div>\n            </CurContent>\n        </Link>\n    );\n}\n\nexport default Thumbnail;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/SignUpBtn.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/CurContent/CurContent.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/modals/SignUpModal.js",["154","155"],"import React, { useState } from 'react';\nimport '../../pages/SignUp/SignUp.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup({ isOpen, close, loginHandler }) {\n    const [signupInfo, setSignupInfo] = useState({\n        picture: '',\n        provider: '',\n        nickName: '',\n        email: '',\n        password: '',\n        mobile: '',\n    });\n    const [errorMessage, setErrorMessage] = useState(false);\n\n    const history = useHistory();\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            !signupInfo.picture ||\n            !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.mobile\n        ) {\n            setErrorMessage(true);\n        } else {\n            axios\n                .post(\n                    'https://localhost:4000/signup',\n                    {\n                        picture: signupInfo.picture,\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        mobile: signupInfo.mobile,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                });\n        }\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"ModalBack\">\n                    <div className=\"signupModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"modalContents\">\n                                <img className=\"signUpIcon\" />\n                                <span className=\"title\">Sign Up</span>\n                                <div>모든 항목은 필수입니다.</div>\n                                <input\n                                    name=\"email\"\n                                    className=\"signUpId\"\n                                    type=\"email\"\n                                    placeholder=\"email\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.email}\n                                />\n                                <input\n                                    name=\"password\"\n                                    className=\"signUpPw\"\n                                    type=\"password\"\n                                    placeholder=\"password\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.password}\n                                />\n                                <input\n                                    name=\"nickName\"\n                                    className=\"signUpNickName\"\n                                    type=\"text\"\n                                    placeholder=\"nickname\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.nickName}\n                                />\n                                <input\n                                    name=\"mobile\"\n                                    className=\"signUpMobile\"\n                                    type=\"tel\"\n                                    placeholder=\"-없이 숫자만 입력하세요\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.mobile}\n                                />\n                                <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                                <input\n                                    name=\"picture\"\n                                    className=\"signUpPic\"\n                                    type=\"file\"\n                                    placeholder=\"picture\"\n                                    onChange={fileEvent}\n                                    value={signupInfo.picture}\n                                />\n                                <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                    {' '}\n                                    회원가입\n                                </button>\n                                <div className=\"loginLine\"></div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Signup;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Tab/Tab.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js",["156","157","158"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Mypage.css';\n\nexport default function MypageDetail(props) {\n    const info = props.data.userInfo;\n    const [isClick, setIsClick] = useState(false);\n    const [patchInfo, setPatchInfo] = useState({\n        nickName: '',\n        email: '',\n        password: '',\n        profile_img: '',\n        phone: '', // 초기값에 info.data.userInfo\n    });\n    const clickHandler = () => {\n        setIsClick(!isClick);\n    };\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setPatchInfo({ ...patchInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setPatchInfo({ ...patchInfo, [e.target.name]: e.target.value });\n    };\n    const patchRequestHandler = () => {\n        if (\n            !patchInfo.nickname ||\n            !patchInfo.email ||\n            !patchInfo.password ||\n            !patchInfo.profile_img ||\n            !patchInfo.phone\n        ) {\n        } else {\n            axios.patch(\n                'https://localhost:4000/user/:id',\n                {\n                    nickName: patchInfo.nickName,\n                    email: patchInfo.email,\n                    password: patchInfo.password,\n                    profile_img: patchInfo.profile_img,\n                    phone: patchInfo.phone,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            ); // 또 뭐 담아야하징 헤더 auth?\n        }\n    };\n\n    return (\n        <>\n            {isClick ? (\n                <form>\n                    <h1>안녕하세요 info.name님</h1>\n                    <div className=\"pf-input-area\">\n                        <a className=\"profile_img\">\n                            <div className=\"label\">프로필 사진</div>\n                            <input\n                                name=\"profile_img\"\n                                type=\"file\"\n                                className=\"avatar\"\n                                onChange={(e) => fileEvent(e)}\n                                value={patchInfo.profile_img}></input>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div>info.id</div>\n                        </div>\n                        <div className=\"password\">\n                            <div className=\"label\">비밀번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"비밀번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.password}></input>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"nickName\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"닉네임을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.nickName}></input>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"email\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"이메일을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.email}></input>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"phone\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"전화번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.phone}></input>\n                        </div>\n                        <input type=\"submit\" value=\"저장\" onClick={patchRequestHandler} />\n                    </div>\n                </form>\n            ) : (\n                <div>\n                    <h1>안녕하세요 info.nickName님</h1>\n                    <div className=\"pfArea\">\n                        <a className=\"pfImg\">\n                            <div className=\"label\">프로필 사진</div>\n                            <div type=\"file\" className=\"avatar\">\n                                이미지\n                            </div>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div className=\"id\">info.id</div>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <div>info.nickName</div>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <div>info.email</div>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <div>info.phone</div>\n                        </div>\n                    </div>\n                    <button classname=\"editBtn\" onClick={clickHandler}>\n                        수정\n                    </button>\n                </div>\n            )}\n        </>\n    );\n}\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Mypage/Mypage.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js",["159","160"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport Thumbnail from '../../components/Thumbnail';\n\nexport default function Mycontent(props) {\n    const info = props.userInfo;\n    const [contentList, setContentList] = useState([]);\n    const [auth, setAuth] = useState('');\n\n    const getContentList = () => {\n        axios.get('https://localhost:4000/content').then((res) => {\n            setContentList(res.data.content);\n        });\n    };\n    const filteredContents = contentList.filter((el) => {\n        return el.writer.id === info.nickName;\n    });\n    getContentList();\n    return (\n        <>\n            <h1>안녕하세요 info.name님</h1>\n            <div>\n                <ul>\n                    {filteredContents.map((list) => {\n                        <li>\n                            <Thumbnail list={list} auth={auth}></Thumbnail>\n                        </li>;\n                    })}\n                </ul>\n            </div>\n        </>\n    );\n}\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/search/search.js",["161"],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/search/Search.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/search/SearchBtn.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/LoginBtn.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/LoginModal.js",["162"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Modal.css';\n\nfunction Login({ isOpen, close, loginHandler }) {\n    const [loginInfo, setLoginInfo] = useState({\n        email: '',\n        password: '',\n    });\n\n    const inputHandler = (e) => {\n        setLoginInfo({ ...loginInfo, [e.target.name]: e.target.value });\n    };\n\n    const loginRequestHandler = () => {\n        axios\n            .post(\n                'https://localhost:4000/login',\n                {\n                    email: loginInfo.email,\n                    password: loginInfo.password,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            )\n            .then((res) => {\n                if (res.message === 'ok') {\n                    return loginHandler(res.cookies);\n                }\n            })\n            .catch((err) => alert(err));\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"modal\">\n                    <div className=\"loginModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <div className=\"modalContents\">\n                            <span className=\"title\">Login</span>\n                            <input\n                                name=\"email\"\n                                className=\"loginId\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"loginPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.password}\n                            />\n                            <button className=\"loginBtn\" onClick={loginRequestHandler}>\n                                로그인\n                            </button>\n                            <button className=\"kakaoBtn\" href={process.env.KAKAO_AUTH_URL}>\n                                <img\n                                    className=\"kakaoLogo\"\n                                    src=\"https://developers.kakao.com/tool/resource/static/img/button/kakaolink/kakaolink_btn_medium.png\"\n                                />\n                                <div className=\"kakaoText\">카카오 계정으로 가입</div>\n                            </button>\n                            <div className=\"signUpLine\">\n                                회원이 아니신가요?\n                                <Link to=\"/signup\" onClick={close}>\n                                    회원가입\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Login;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Search/SearchBtn.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Search/Search.js",["163"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport './Search.css';\nimport Thumbnail from '../Thumbnail';\n\nexport default function Search({ isOpen, close }) {\n    const filteredContent = (data) => {\n        data = data.filter((el) => {\n            return el.data.nickName.indexOf(searchKeyword) > -1;\n        });\n        return data.map((list) => {\n            return <Thumbnail list={list} />;\n        });\n    };\n    // 컨텐츠리스트를 데이터로 받아서 그걸 필터하고 맵걸어서 썸네일에 그 값을 넣어 출력하는 함수\n    // 저기에 리스트를 넣는게 맞는지 모르겠으나 앱 JS를 보고 일단 만듬.\n\n    const [contentList, setContentList] = useState([]);\n    const [searchKeyword, SetSearchKeyword] = useState('');\n    const inputHandler = (e) => {\n        SetSearchKeyword(([e.target.name] = e.target.value));\n    };\n    const searchRefresh = () => {\n        SetSearchKeyword('');\n    };\n    // 검색해서 리턴하고나면 검색어가 공백이 되게하는 리프레시 함수... 잘 될지 모르겠음.\n    // 이걸하면 모든 문자가 검색돼서 필터 걸리지않고 아마도 모든 게시물이 썸네일로 나올거임\n    const getContentList = () => {\n        axios.get('https://localhost:4000/content').then((res) => {\n            setContentList(res.data.content);\n        });\n    };\n    getContentList();\n    return (\n        <>\n            {isOpen ? (\n                <div className=\"searchModal\">\n                    <div className=\"inputWrapper\">\n                        <svg width=\"4vw\" height=\"4vw\" viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path\n                                d=\"M12.3243 4.98201C14.3159 6.97369 14.3159 10.2028 12.3243 12.1945C10.3326 14.1862 7.10345 14.1862 5.11177 12.1945C3.1201 10.2028 3.1201 6.97369 5.11177 4.98201C7.10345 2.99034 10.3326 2.99034 12.3243 4.98201ZM14.8612 12.8929C16.9167 9.96687 16.6367 5.90038 14.0213 3.28496C11.0924 0.356024 6.34365 0.356024 3.41472 3.28496C0.485785 6.21389 0.485785 10.9626 3.41472 13.8916C6.07942 16.5563 10.2504 16.7967 13.1869 14.6127L17.8336 19.2595C18.3022 19.7281 19.062 19.7281 19.5307 19.2595C19.9993 18.7908 19.9993 18.031 19.5307 17.5624L14.8612 12.8929Z\"\n                                fill=\"#ccc\"></path>\n                        </svg>\n                        <input\n                            className=\"searchInput\"\n                            placeholder=\"검색하기\"\n                            name=\"searchKeyword\"\n                            onChange={inputHandler}\n                            value={searchKeyword}></input>\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <div>{contentList ? <div>{filteredContent(contentList)}</div> : '검색 결과가 없습니다.'}</div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js",[],"/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/components/Modals/SignUpModal.js",["164"],"import React, { useState } from 'react';\nimport '../../pages/SignUp/SignUp.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup({ isOpen, close, loginHandler }) {\n    const [signupInfo, setSignupInfo] = useState({\n        profile_img: '',\n        provider: '',\n        nickName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n    });\n\n    const history = useHistory();\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.profile_img });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            !signupInfo.profile_img ||\n            !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.phoneNumber\n        ) {\n        } else {\n            axios\n                .post(\n                    'https://localhost:4000/signup',\n                    {\n                        profile_img: signupInfo.profile_img,\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        phoneNumber: signupInfo.phoneNumber,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                });\n        }\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"ModalBack\">\n                    <div className=\"signupModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"modalContents\">\n                                <img className=\"signUpIcon\" />\n                                <span className=\"title\">Sign Up</span>\n                                <div>모든 항목은 필수입니다.</div>\n                                <input\n                                    name=\"email\"\n                                    className=\"signUpId\"\n                                    type=\"email\"\n                                    placeholder=\"email\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.email}\n                                />\n                                <input\n                                    name=\"password\"\n                                    className=\"signUpPw\"\n                                    type=\"password\"\n                                    placeholder=\"password\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.password}\n                                />\n                                <input\n                                    name=\"nickName\"\n                                    className=\"signUpNickName\"\n                                    type=\"text\"\n                                    placeholder=\"nickname\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.nickName}\n                                />\n                                <input\n                                    name=\"phoneNumber\"\n                                    className=\"signUpMobile\"\n                                    type=\"tel\"\n                                    placeholder=\"-없이 숫자만 입력하세요\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.phoneNumber}\n                                />\n                                <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                                <input\n                                    name=\"profile_img\"\n                                    className=\"signUpPic\"\n                                    type=\"file\"\n                                    onChange={fileEvent}\n                                    value={signupInfo.profile_img}\n                                />\n                                <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                    {' '}\n                                    회원가입\n                                </button>\n                                <div className=\"loginLine\"></div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Signup;\n","/Users/baemingi/Desktop/project/THE-TOOPYO/client/src/pages/Login/LoginPage.js",["165"],{"ruleId":"166","severity":1,"message":"167","line":3,"column":25,"nodeType":"168","messageId":"169","endLine":3,"endColumn":30},{"ruleId":"166","severity":1,"message":"170","line":3,"column":32,"nodeType":"168","messageId":"169","endLine":3,"endColumn":38},{"ruleId":"166","severity":1,"message":"171","line":3,"column":40,"nodeType":"168","messageId":"169","endLine":3,"endColumn":44},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"166","severity":1,"message":"176","line":3,"column":40,"nodeType":"168","messageId":"169","endLine":3,"endColumn":48},{"ruleId":"166","severity":1,"message":"177","line":3,"column":50,"nodeType":"168","messageId":"169","endLine":3,"endColumn":59},{"ruleId":"178","severity":1,"message":"179","line":55,"column":53,"nodeType":"180","messageId":"181","endLine":55,"endColumn":55},{"ruleId":"166","severity":1,"message":"182","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":14},{"ruleId":"166","severity":1,"message":"183","line":79,"column":17,"nodeType":"168","messageId":"169","endLine":79,"endColumn":39},{"ruleId":"184","severity":1,"message":"185","line":90,"column":37,"nodeType":"186","endLine":90,"endColumn":67},{"ruleId":"184","severity":1,"message":"185","line":112,"column":41,"nodeType":"186","endLine":115,"endColumn":43},{"ruleId":"172","replacedBy":"187"},{"ruleId":"174","replacedBy":"188"},{"ruleId":"184","severity":1,"message":"185","line":64,"column":33,"nodeType":"186","endLine":67,"endColumn":35},{"ruleId":"166","severity":1,"message":"189","line":15,"column":12,"nodeType":"168","messageId":"169","endLine":15,"endColumn":24},{"ruleId":"166","severity":1,"message":"190","line":16,"column":12,"nodeType":"168","messageId":"169","endLine":16,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":76,"column":29,"nodeType":"186","endLine":76,"endColumn":59},{"ruleId":"191","severity":1,"message":"192","line":20,"column":17,"nodeType":"186","endLine":20,"endColumn":64},{"ruleId":"166","severity":1,"message":"193","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":18},{"ruleId":"166","severity":1,"message":"170","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":2,"column":18,"nodeType":"168","messageId":"169","endLine":2,"endColumn":23},{"ruleId":"166","severity":1,"message":"176","line":2,"column":25,"nodeType":"168","messageId":"169","endLine":2,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":16,"column":25,"nodeType":"186","endLine":16,"endColumn":54},{"ruleId":"184","severity":1,"message":"185","line":22,"column":21,"nodeType":"186","endLine":22,"endColumn":69},{"ruleId":"184","severity":1,"message":"185","line":23,"column":21,"nodeType":"186","endLine":23,"endColumn":69},{"ruleId":"166","severity":1,"message":"189","line":15,"column":12,"nodeType":"168","messageId":"169","endLine":15,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":71,"column":33,"nodeType":"186","endLine":71,"endColumn":63},{"ruleId":"166","severity":1,"message":"194","line":6,"column":11,"nodeType":"168","messageId":"169","endLine":6,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":58,"column":25,"nodeType":"186","endLine":58,"endColumn":52},{"ruleId":"191","severity":1,"message":"192","line":121,"column":25,"nodeType":"186","endLine":121,"endColumn":46},{"ruleId":"166","severity":1,"message":"195","line":8,"column":18,"nodeType":"168","messageId":"169","endLine":8,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":24,"column":50,"nodeType":"180","messageId":"181","endLine":24,"endColumn":52},{"ruleId":"166","severity":1,"message":"196","line":5,"column":11,"nodeType":"168","messageId":"169","endLine":5,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":63,"column":33,"nodeType":"186","endLine":66,"endColumn":35},{"ruleId":"166","severity":1,"message":"197","line":23,"column":11,"nodeType":"168","messageId":"169","endLine":23,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":70,"column":33,"nodeType":"186","endLine":70,"endColumn":63},{"ruleId":"184","severity":1,"message":"185","line":62,"column":29,"nodeType":"186","endLine":65,"endColumn":31},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["198"],"no-negated-in-lhs",["199"],"'Redirect' is defined but never used.","'useParams' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Signup' is defined but never used.","'isLoginOrSignupModalOn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["198"],["199"],"'errorMessage' is assigned a value but never used.","'isLogin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'info' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'clickHandler' is assigned a value but never used.","'searchRefresh' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]