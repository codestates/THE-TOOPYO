[{"/Users/suksangmin/THE-TOOPYO/client/src/index.js":"1","/Users/suksangmin/THE-TOOPYO/client/src/App.js":"2","/Users/suksangmin/THE-TOOPYO/client/src/components/Nav/Nav.js":"3","/Users/suksangmin/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js":"4","/Users/suksangmin/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js":"5","/Users/suksangmin/THE-TOOPYO/client/src/pages/CurContent/CurContent.js":"6","/Users/suksangmin/THE-TOOPYO/client/src/pages/NewContent/NewContent.js":"7","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mypage.js":"8","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/SideBar.js":"9","/Users/suksangmin/THE-TOOPYO/client/src/components/Tab/Tab.js":"10","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js":"11","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js":"12","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js":"13","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginBtn.js":"14","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js":"15","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpModal.js":"16","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginModal.js":"17","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchBtn.js":"18","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/Search.js":"19","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchThumbnail.js":"20","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MyThumbnail.js":"21","/Users/suksangmin/THE-TOOPYO/client/src/pages/Login/LoginPage.js":"22"},{"size":354,"mtime":1630025556432,"results":"23","hashOfConfig":"24"},{"size":3470,"mtime":1630424701869,"results":"25","hashOfConfig":"24"},{"size":2828,"mtime":1630423336711,"results":"26","hashOfConfig":"24"},{"size":3434,"mtime":1630382583192,"results":"27","hashOfConfig":"24"},{"size":5636,"mtime":1630426091347,"results":"28","hashOfConfig":"24"},{"size":5152,"mtime":1630423336680,"results":"29","hashOfConfig":"24"},{"size":5302,"mtime":1630432513933,"results":"30","hashOfConfig":"24"},{"size":536,"mtime":1630423975908,"results":"31","hashOfConfig":"24"},{"size":1783,"mtime":1630382583190,"results":"32","hashOfConfig":"24"},{"size":2120,"mtime":1630423336709,"results":"33","hashOfConfig":"24"},{"size":350,"mtime":1630382583191,"results":"34","hashOfConfig":"24"},{"size":5955,"mtime":1630423336680,"results":"35","hashOfConfig":"24"},{"size":767,"mtime":1630423906916,"results":"36","hashOfConfig":"24"},{"size":606,"mtime":1630258818388,"results":"37","hashOfConfig":"24"},{"size":583,"mtime":1630165627494,"results":"38","hashOfConfig":"24"},{"size":5680,"mtime":1630423336712,"results":"39","hashOfConfig":"24"},{"size":2922,"mtime":1630423336679,"results":"40","hashOfConfig":"24"},{"size":1493,"mtime":1630423856170,"results":"41","hashOfConfig":"24"},{"size":2843,"mtime":1630423876424,"results":"42","hashOfConfig":"24"},{"size":1173,"mtime":1630424583635,"results":"43","hashOfConfig":"24"},{"size":1092,"mtime":1630424622201,"results":"44","hashOfConfig":"24"},{"size":2532,"mtime":1630423336680,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"c0y8jf",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/suksangmin/THE-TOOPYO/client/src/index.js",["100","101","102"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n",["103","104"],"/Users/suksangmin/THE-TOOPYO/client/src/App.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Nav/Nav.js",["105","106","107","108","109","110","111","112"],"import { useState } from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport './Nav.css';\nimport LoginButton from '../Modals/LoginBtn';\nimport SignUpButton from '../Modals/SignUpBtn';\nimport Sidebar from '../SideBar/SideBar';\nimport SearchButton from '../Search/SearchBtn';\nimport axios from 'axios';\nimport Mypage from '../../pages/Mypage/Mypage';\nimport Tab from '../Tab/Tab';\n\nfunction Nav({ isLogin, loginHandler, contentList }) {\n    const myPage = () => {\n        axios.post('http://localhost:80/user', { email: '확인중' }).then((a) => {\n            console.log(a);\n        });\n    };\n\n    const [login, setLogin] = useState('로그인');\n\n    // const [currentTab, setCurrentTab] = useState(0);\n    // const tabMenu = [\n    //     { name: 'mypage', content: <MypageDetail /> },\n    //     { name: 'mycontent', content: <Mycontent /> },\n    // ];\n    // const selectMenuHandler = (index) => {\n    //     setCurrentTab(index);\n    // };\n\n    // const aaa () => {\n\n    // }\n\n    return (\n        <nav>\n            <div className=\"navInner\">\n                <Sidebar />\n                <Link to=\"/\">\n                    <div className=\"logoContainer\">\n                        <h1>\n                            <img\n                                className=\"logo\"\n                                src=\"https://cdn.discordapp.com/attachments/877171336508739646/881725307579674664/1.png\"></img>\n                        </h1>\n                    </div>\n                </Link>\n                <div>\n                    <ul className=\"buttonContainer\">\n                        <li>\n                            <SearchButton contentList={contentList} />\n                        </li>\n                        <li>\n                            <Link to=\"/NewContent\">\n                                <button className=\"newContentBtn navBtn\">새 글 작성</button>\n                            </Link>\n                        </li>\n                        <li>\n                            <SignUpButton loginHandler={loginHandler} />\n                        </li>\n                        {isLogin ? (\n                            <li>\n                                <button className=\"navBtn\" onClick={myPage}>\n                                    my page\n                                </button>\n                            </li>\n                        ) : (\n                            <div>\n                                <LoginButton loginHandler={loginHandler} />\n                            </div>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\nexport default Nav;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js",["113","114","115"],"import './Thumbnail.css';\n\nimport { Link } from 'react-router-dom';\n\nfunction Thumbnail({ list, getContentDetail }) {\n    const contentDetail = () => {\n        getContentDetail(list.id);\n    };\n\n    return (\n        <div>\n            <Link to=\"/curContent\">\n                <div\n                    className=\"container\"\n                    onClick={() => {\n                        contentDetail();\n                    }}>\n                    <h1 className=\"thumbTitle\">{list.title}</h1>\n                    <img className=\"thumbPicture thumbPicture_1\" src={list.picture_1}></img>\n                    <img\n                        id=\"thumbVersus\"\n                        src=\"https://cdn.discordapp.com/attachments/881710985335934979/881711027425787914/vs.png\"\n                        alt=\"versus\"></img>\n                    <img className=\"thumbPicture thumbPicture_2\" src={list.picture_2}></img>\n                    <div className=\"descript\">{list.description}</div>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default Thumbnail;\n\n{\n    /* <div id=\"inner\">\n    <div id=\"mainBanner\"></div>\n    <div className=\"app-thumb-entire\">\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfa<br></br>lsxmdetjfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsx<br></br>mdetjfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsxmde<br></br>tjfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsxmdet<br></br>jfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsxmdetjfd<br></br>ualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfg<br></br>falsxmdetjfdualkfdkfbvfbfbfgfalsxmdetjfdua\n            </div>\n        </div>\n    </div>\n</div>; */\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js",["116","117","118"],"/Users/suksangmin/THE-TOOPYO/client/src/pages/CurContent/CurContent.js",["119","120","121","122"],"import { useState } from 'react';\nimport axios from 'axios';\nimport './CurContent.css';\n\nfunction CurContent({ content, id }) {\n    const [isAuthOk, setIsAuthOk] = useState(false); // session id 를 보내고 인증이 완료되어 투표한 경우\n    const [isAuthNot, setIsAuthNot] = useState(false);\n\n    const isAuthOkHandler = () => {\n        setIsAuthOk(true);\n    };\n\n    const isAuthNotHandler = () => {\n        setIsAuthNot(false);\n    };\n\n    const getAgree = () => {\n        console.log('agree실행됨');\n        axios.get(`https://localhost:80/content/agree/${id}`).then((res) => {\n            if (res.message === 'agree complete') return isAuthOkHandler();\n            else {\n                return isAuthNotHandler();\n            }\n        });\n    };\n\n    const getDisagree = () => {\n        axios.get(`https://localhost:80/content/disagree/${id}`).then((res) => {\n            if (res.message === 'disagree complete') return isAuthOkHandler();\n            else {\n                return isAuthNotHandler();\n            }\n        });\n    };\n\n    const deleteContent = () => {\n        axios.delete(`https://localhost:80/content/${id}`).then((res) => {\n            if (res.message === 'delete complete') {\n                isAuthOkHandler();\n            } else {\n                isAuthNotHandler();\n            }\n        });\n    };\n\n    return (\n        <div className=\"curContent\">\n            <div className=\"curCotainerTitle\">\n                <h1 id=\"curTitle\">{content.title}</h1>\n                <button className=\"editContentBtn curBtn\">\n                    <img\n                        id=\"editContent\"\n                        src=\"https://cdn.discordapp.com/attachments/881710985335934979/881927360398655518/edit.png\"></img>\n                </button>\n                <button className=\"deleteContent curBtn\" onClick={deleteContent}>\n                    <img\n                        id=\"deleteContent\"\n                        src=\"https://cdn.discordapp.com/attachments/837593576955052072/881931904486621204/delete.png\"></img>\n                </button>\n            </div>\n            {/* 버튼 끝!!!!!!!!!!!!!!!!             @@@@@@@@@@@@@@@@@ */}\n            <div className=\"contentMain\">\n                <div className=\"contentInner\">\n                    {isAuthOk ? (\n                        <div className=\"alert authOk\">\n                            <button onClick={isAuthOkHandler} className=\"checkAlertBtn\">\n                                확인\n                            </button>\n                            요청이 완료되었습니다.\n                        </div>\n                    ) : null}\n\n                    {isAuthNot ? (\n                        <div className=\"alert authNot\" onClick={isAuthNotHandler}>\n                            <button onClick={isAuthOkHandler} className=\"checkAlert\">\n                                확인\n                            </button>\n                            로그인이 필요한 서비스입니다.\n                        </div>\n                    ) : null}\n                    {/* 알러트창!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!알러트창~!!!!!!!!!!!!! */}\n                    <ul id=\"curPicContainer\">\n                        <li>\n                            <div className=\"curPic\">\n                                <img\n                                    src={content.picture_1}\n                                    alt={content.description}\n                                    className=\"curPicture_1 curPic\"\n                                    onClick={getAgree}></img>\n                            </div>\n                        </li>\n                        <li className=\"curVersus\">\n                            <img src=\"https://cdn.discordapp.com/attachments/881710985335934979/881711027425787914/vs.png\"></img>\n                        </li>\n                        <li>\n                            <div className=\"curPic\">\n                                <img\n                                    src={content.picture_2}\n                                    alt={content.description}\n                                    className=\"curPicture_2 curPic\"\n                                    onClick={getDisagree}></img>\n                            </div>\n                        </li>\n                    </ul>\n                    {/* ---------------------작성자프로필-------------------- */}\n                    <div className=\"contentInfo\">\n                        <div className=\"curWriter\">\n                            <div className=\"curWriterImg\">\n                                <img\n                                    src={content.profile_img}\n                                    // alt=\"작성자 프로필 사진\"\n                                    className=\"curWriterProfile\"></img>\n                            </div>\n                            <span className=\"curWriterName\">{content.nickname}</span>\n                        </div>\n                        <span className=\"curDesc\">{content.description}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CurContent;\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/NewContent/NewContent.js",["123","124","125","126","127","128","129"],"/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mypage.js",["130","131"],"/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/SideBar.js",["132"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SidebarItem from './Sidebaritem';\nimport './SideBar.css';\n\nfunction Sidebar() {\n    const menus = [\n        { name: '홈', path: '/' },\n        { name: '회원가입', path: '/signup' },\n        { name: '새 글 작성', path: '/content' },\n        { name: '로그인', path: '/login' },\n    ];\n    const [isOpen, setisOpen] = useState(false);\n    const sidebarHandler = () => {\n        setisOpen(!isOpen);\n    };\n    return (\n        <div className=\"sidebar\">\n            <div class=\"btn-menu\">\n                <a class=\"sidebarBtn\" onClick={sidebarHandler}>\n                    <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 14\" fill=\"none\">\n                        <rect width=\"18\" height=\"2\" fill=\"white\"></rect>\n                        <rect x=\"6\" y=\"6\" width=\"12\" height=\"2\" fill=\"white\"></rect>\n                        <rect y=\"12\" width=\"18\" height=\"2\" fill=\"white\"></rect>\n                    </svg>\n                </a>\n            </div>\n            {isOpen === true ? (\n                <div className=\"sidebarBack\" onClick={sidebarHandler}>\n                    <div className=\"sidebarContents\">\n                        <button className=\"sidebarCloseBtn\" onClick={sidebarHandler}>\n                            X\n                        </button>\n                        {menus.map((menu, index) => {\n                            return (\n                                <Link to={menu.path} key={index}>\n                                    <SidebarItem menu={menu} />\n                                </Link>\n                            );\n                        })}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n}\nexport default Sidebar;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Tab/Tab.js",["133"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Mycontent from '../../pages/Mypage/Mycontent';\nimport MypageDetail from '../../pages/Mypage/MypageDetail';\n\nconst TabMenu = styled.ul`\n    background-color: rgba(102, 102, 102, 0);\n    font-weight: bold;\n    color: white;\n    display: flex;\n    flex-direction: row;\n    justify-items: center;\n    align-items: center;\n    list-style: none;\n    margin-bottom: 7rem;\n    text-align: center;\n\n    & div.desc {\n        text-align: center;\n    }\n`;\n\nconst Desc = styled.div`\n    text-align: center;\n`;\n\nexport default function Tab({ userInfo, getUserInfo }) {\n    console.log(userInfo);\n    const [currentTab, setCurrentTab] = useState(0);\n    const tabMenu = [\n        { name: 'mypage', content: <MypageDetail getUserInfo={getUserInfo} userInfo={userInfo.userInfo} /> },\n        { name: 'mycontent', content: <Mycontent userInfo={userInfo.content} /> },\n    ];\n    const selectMenuHandler = (index) => {\n        setCurrentTab(index);\n    };\n\n    return (\n        <>\n            <div>\n                <TabMenu>\n                    {tabMenu.map((el, index) => {\n                        return (\n                            <li\n                                className={currentTab === index ? 'mypage' : 'mycontent'}\n                                onClick={() => {\n                                    selectMenuHandler(index);\n                                    getUserInfo();\n                                }}>\n                                {el.name}\n                            </li>\n                        );\n                    })}\n                </TabMenu>\n                <Desc>\n                    <p>{tabMenu[currentTab].content}</p>\n                </Desc>\n            </div>\n        </>\n    );\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js",["134","135","136","137"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Mypage.css';\n\n\nexport default function MypageDetail({ userInfo, getUserInfo }) {\n    console.log(userInfo);\n    const [user, setUser] = useState({\n        nickName: userInfo.nickName,\n        email: userInfo.email,\n        password: userInfo.password,\n        profile_img: userInfo.profile_img,\n        phoneNumber: userInfo.phoneNumber,\n    });\n    console.log(user);\n\n    const [isClick, setIsClick] = useState(false);\n    const [patchInfo, setPatchInfo] = useState({\n        // nickName: userInfo.nickName,\n        // email: userInfo.email,\n        // password: userInfo.password,\n        // profile_img: userInfo.profile_img,\n        // phoneNumber: userInfo.phoneNumber, // 초기값에 info.data.userInfo\n    });\n    console.log(userInfo);\n    console.log(patchInfo);\n    const clickHandler = () => {\n        setIsClick(!isClick);\n    };\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setPatchInfo({ ...patchInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    useEffect(() => {\n        getUserInfo();\n    }, []);\n    const inputHandler = (e) => {\n        setPatchInfo({ ...patchInfo, [e.target.name]: e.target.value });\n    };\n    const patchRequestHandler = () => {\n        if (!patchInfo.nickname || !patchInfo.password || !patchInfo.profile_img || !patchInfo.phoneNumber) {\n        } else {\n            axios.patch(\n                'https://localhost:80/user/:id',\n                {\n                    nickName: patchInfo.nickName,\n                    email: patchInfo.email,\n                    password: patchInfo.password,\n                    profile_img: patchInfo.profile_img,\n                    phoneNumber: patchInfo.phoneNumber,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            ); // 또 뭐 담아야하징 헤더 auth?\n        }\n    };\n\n    return (\n        <>\n            {isClick ? (\n                <form>\n                    <h1>안녕하세요 {user.name}님</h1>\n                    <div className=\"pf-input-area\">\n                        <a className=\"profile_img\">\n                            <div className=\"label\">프로필 사진</div>\n                            <input\n                                name=\"profile_img\"\n                                type=\"file\"\n                                className=\"avatar\"\n                                onChange={(e) => fileEvent(e)}\n                                value={patchInfo.profile_img}></input>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">이메일</div>\n                            <div>이메일</div>\n                        </div>\n                        <div className=\"password\">\n                            <div className=\"label\">비밀번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"비밀번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.password}></input>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"nickName\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"닉네임을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.nickName}></input>\n                        </div>\n                        <div className=\"phoneNumber\">\n                            <div className=\"label\">전화번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"phoneNumber\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"전화번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.phoneNumber}></input>\n                        </div>\n                        <input type=\"submit\" value=\"저장\" onClick={patchRequestHandler} />\n                    </div>\n                </form>\n            ) : (\n                <div>\n                    <h1>안녕하세요 {user.nickName}님</h1>\n                    <div className=\"pfArea\">\n                        <a className=\"pfImg\">\n                            <div className=\"label\">프로필 사진</div>\n                            <div type=\"file\" className=\"avatar\">\n                                {user.profile_img}\n                            </div>\n                        </a>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <div>{user.email}</div>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <div>{user.nickName}</div>\n                        </div>\n                        <div className=\"phoneNumber\">\n                            <div className=\"label\">전화번호</div>\n                            <div>{user.phoneNumber}</div>\n                        </div>\n                    </div>\n                    <button classname=\"editBtn\" onClick={clickHandler}>\n                        수정\n                    </button>\n                </div>\n            )}\n        </>\n    );\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js",["138"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpModal.js",["139"],"import React, { useState } from 'react';\nimport '../../pages/SignUp/SignUp.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup({ isOpen, close, loginHandler }) {\n    const [signupInfo, setSignupInfo] = useState({\n        profile_img: '',\n        provider: '',\n        nickName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n    });\n\n    const history = useHistory();\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.profile_img });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            // !signupInfo.profile_img ||\n            // !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.phoneNumber\n        ) {\n        } else {\n            axios\n                .post(\n                    'https://localhost:80/signup',\n                    {\n                        profile_img: 'dddd',\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        phoneNumber: signupInfo.phoneNumber,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                });\n        }\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"ModalBack\">\n                    <div className=\"signupModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"modalContents\">\n                                <img className=\"signUpIcon\" />\n                                <span className=\"title\">Sign Up</span>\n                                <div>모든 항목은 필수입니다.</div>\n                                <input\n                                    name=\"email\"\n                                    className=\"signUpId\"\n                                    type=\"email\"\n                                    placeholder=\"email\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.email}\n                                />\n                                <input\n                                    name=\"password\"\n                                    className=\"signUpPw\"\n                                    type=\"password\"\n                                    placeholder=\"password\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.password}\n                                />\n                                <input\n                                    name=\"nickName\"\n                                    className=\"signUpNickName\"\n                                    type=\"text\"\n                                    placeholder=\"nickname\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.nickName}\n                                />\n                                <input\n                                    name=\"phoneNumber\"\n                                    className=\"signUpMobile\"\n                                    type=\"tel\"\n                                    placeholder=\"-없이 숫자만 입력하세요\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.phoneNumber}\n                                />\n                                <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                                <input\n                                    name=\"profile_img\"\n                                    className=\"signUpPic\"\n                                    type=\"file\"\n                                    onChange={fileEvent}\n                                    value={signupInfo.profile_img}\n                                />\n                                <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                    {' '}\n                                    회원가입\n                                </button>\n                                <div className=\"loginLine\"></div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Signup;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginModal.js",["140"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Modal.css';\n\nfunction Login({ isOpen, close, loginHandler }) {\n    const [loginInfo, setLoginInfo] = useState({\n        email: '',\n        password: '',\n    });\n\n    const inputHandler = (e) => {\n        setLoginInfo({ ...loginInfo, [e.target.name]: e.target.value });\n    };\n\n    const loginRequestHandler = () => {\n        axios\n            .post(\n                'http://localhost:80/login',\n                {\n                    email: loginInfo.email,\n                    password: loginInfo.password,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            )\n            .then((res) => {\n                if (res.data.message === 'ok') {\n                    loginHandler();\n                }\n            })\n            .catch((err) => alert(err));\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"modal\">\n                    <div className=\"loginModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <div className=\"modalContents\">\n                            <span className=\"title\">Login</span>\n                            <input\n                                name=\"email\"\n                                className=\"loginId\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"loginPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.password}\n                            />\n                            <button className=\"loginBtn\" onClick={loginRequestHandler}>\n                                로그인\n                            </button>\n                            <button className=\"kakaoBtn\" href={process.env.KAKAO_AUTH_URL}>\n                                <img\n                                    className=\"kakaoLogo\"\n                                    src=\"https://developers.kakao.com/tool/resource/static/img/button/kakaolink/kakaolink_btn_medium.png\"\n                                />\n                                <div className=\"kakaoText\">카카오 계정으로 가입</div>\n                            </button>\n                            <div className=\"signUpLine\">\n                                회원이 아니신가요?\n                                <Link to=\"/signup\" onClick={close}>\n                                    회원가입\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Login;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Search/Search.js",["141"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchThumbnail.js",["142","143"],"/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MyThumbnail.js",["144","145"],"/Users/suksangmin/THE-TOOPYO/client/src/pages/Login/LoginPage.js",[],{"ruleId":"146","severity":1,"message":"147","line":3,"column":25,"nodeType":"148","messageId":"149","endLine":3,"endColumn":30},{"ruleId":"146","severity":1,"message":"150","line":3,"column":32,"nodeType":"148","messageId":"149","endLine":3,"endColumn":38},{"ruleId":"146","severity":1,"message":"151","line":3,"column":40,"nodeType":"148","messageId":"149","endLine":3,"endColumn":44},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"146","severity":1,"message":"150","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":2,"column":18,"nodeType":"148","messageId":"149","endLine":2,"endColumn":23},{"ruleId":"146","severity":1,"message":"156","line":2,"column":25,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"157","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":14},{"ruleId":"146","severity":1,"message":"158","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":11},{"ruleId":"146","severity":1,"message":"159","line":19,"column":12,"nodeType":"148","messageId":"149","endLine":19,"endColumn":17},{"ruleId":"146","severity":1,"message":"160","line":19,"column":19,"nodeType":"148","messageId":"149","endLine":19,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":41,"column":29,"nodeType":"163","endLine":43,"endColumn":122},{"ruleId":"161","severity":1,"message":"162","line":19,"column":21,"nodeType":"163","endLine":19,"endColumn":87},{"ruleId":"161","severity":1,"message":"162","line":24,"column":21,"nodeType":"163","endLine":24,"endColumn":87},{"ruleId":"164","severity":1,"message":"165","line":34,"column":1,"nodeType":"166","messageId":"167","endLine":94,"endColumn":2},{"ruleId":"146","severity":1,"message":"168","line":16,"column":12,"nodeType":"148","messageId":"149","endLine":16,"endColumn":24},{"ruleId":"146","severity":1,"message":"169","line":18,"column":12,"nodeType":"148","messageId":"149","endLine":18,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":87,"column":29,"nodeType":"163","endLine":87,"endColumn":59},{"ruleId":"161","severity":1,"message":"162","line":51,"column":21,"nodeType":"163","endLine":53,"endColumn":117},{"ruleId":"161","severity":1,"message":"162","line":56,"column":21,"nodeType":"163","endLine":58,"endColumn":119},{"ruleId":"161","severity":1,"message":"162","line":93,"column":29,"nodeType":"163","endLine":93,"endColumn":124},{"ruleId":"161","severity":1,"message":"162","line":109,"column":33,"nodeType":"163","endLine":112,"endColumn":66},{"ruleId":"146","severity":1,"message":"151","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"156","line":3,"column":16,"nodeType":"148","messageId":"149","endLine":3,"endColumn":24},{"ruleId":"146","severity":1,"message":"170","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":100,"column":21,"nodeType":"163","endLine":102,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":108,"column":25,"nodeType":"163","endLine":108,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":116,"column":21,"nodeType":"163","endLine":118,"endColumn":115},{"ruleId":"161","severity":1,"message":"162","line":120,"column":25,"nodeType":"163","endLine":120,"endColumn":55},{"ruleId":"146","severity":1,"message":"171","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"172","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"174","line":20,"column":17,"nodeType":"163","endLine":20,"endColumn":64},{"ruleId":"146","severity":1,"message":"172","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"175","line":8,"column":18,"nodeType":"148","messageId":"149","endLine":8,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":40,"column":8,"nodeType":"178","endLine":40,"endColumn":10,"suggestions":"179"},{"ruleId":"173","severity":1,"message":"174","line":67,"column":25,"nodeType":"163","endLine":67,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":119,"column":25,"nodeType":"163","endLine":119,"endColumn":46},{"ruleId":"146","severity":1,"message":"180","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":70,"column":33,"nodeType":"163","endLine":70,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":63,"column":33,"nodeType":"163","endLine":66,"endColumn":35},{"ruleId":"146","severity":1,"message":"180","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":20,"column":21,"nodeType":"163","endLine":20,"endColumn":87},{"ruleId":"161","severity":1,"message":"162","line":25,"column":21,"nodeType":"163","endLine":25,"endColumn":87},{"ruleId":"161","severity":1,"message":"162","line":19,"column":21,"nodeType":"163","endLine":19,"endColumn":87},{"ruleId":"161","severity":1,"message":"162","line":24,"column":21,"nodeType":"163","endLine":24,"endColumn":87},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["181"],"no-negated-in-lhs",["182"],"'Redirect' is defined but never used.","'Mypage' is defined but never used.","'Tab' is defined but never used.","'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'errorMessage' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'CurContent' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array. If 'getUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["183"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},"Update the dependencies array to be: [getUserInfo]",{"range":"186","text":"187"},[1263,1265],"[getUserInfo]"]