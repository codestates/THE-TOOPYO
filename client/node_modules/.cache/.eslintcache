[{"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/index.js":"1","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/App.js":"2","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/Mypage/Mypage.js":"3","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/CurContent/CurContent.js":"4","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js":"5","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/SignUpBtn.js":"6","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/SideBar/SideBar.js":"7","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/LoginBtn.js":"8","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js":"9","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/LoginModal.js":"10","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/SignUpModal.js":"11","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/search/SearchBtn.js":"12","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/search/Search.js":"13","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Tab/Tab.js":"14","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js":"15","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js":"16","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Search/SearchBtn.js":"17","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/LoginBtn.js":"18","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js":"19","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Search/Search.js":"20","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/LoginModal.js":"21","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/SignUpModal.js":"22","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Nav/Nav.js":"23","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js":"24","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/NewContent/NewContent.js":"25"},{"size":301,"mtime":1630299526877,"results":"26","hashOfConfig":"27"},{"size":2127,"mtime":1630299695829,"results":"28","hashOfConfig":"27"},{"size":206,"mtime":1630165283776,"results":"29","hashOfConfig":"27"},{"size":3987,"mtime":1630297744211,"results":"30","hashOfConfig":"27"},{"size":5403,"mtime":1630252449332,"results":"31","hashOfConfig":"27"},{"size":532,"mtime":1629965851689,"results":"32","hashOfConfig":"27"},{"size":1783,"mtime":1630298380109,"results":"33","hashOfConfig":"27"},{"size":511,"mtime":1629965851689,"results":"34","hashOfConfig":"27"},{"size":223,"mtime":1630051959092,"results":"35","hashOfConfig":"27"},{"size":3213,"mtime":1629966442492,"results":"36","hashOfConfig":"27"},{"size":5321,"mtime":1630051959093,"results":"37","hashOfConfig":"27"},{"size":529,"mtime":1630053640053,"results":"38","hashOfConfig":"27"},{"size":535,"mtime":1630051959093,"results":"39","hashOfConfig":"27"},{"size":1535,"mtime":1630051959092,"results":"40","hashOfConfig":"27"},{"size":998,"mtime":1630218124412,"results":"41","hashOfConfig":"27"},{"size":6418,"mtime":1630165283776,"results":"42","hashOfConfig":"27"},{"size":1363,"mtime":1630300055092,"results":"43","hashOfConfig":"27"},{"size":606,"mtime":1630253388784,"results":"44","hashOfConfig":"27"},{"size":583,"mtime":1630299777387,"results":"45","hashOfConfig":"27"},{"size":2697,"mtime":1630299935037,"results":"46","hashOfConfig":"27"},{"size":3259,"mtime":1630298748651,"results":"47","hashOfConfig":"27"},{"size":5204,"mtime":1630261688835,"results":"48","hashOfConfig":"27"},{"size":1945,"mtime":1630299712430,"results":"49","hashOfConfig":"27"},{"size":3645,"mtime":1630298829639,"results":"50","hashOfConfig":"27"},{"size":3031,"mtime":1630289283369,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ffcvkh",{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/index.js",["112","113","114","115"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/App.js",["116","117"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/Mypage/Mypage.js",[],["118","119"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/CurContent/CurContent.js",["120","121"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js",["122","123","124"],"import React, { useState } from 'react';\nimport './SignUp.css';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction SignupPage() {\n    const [signupInfo, setSignupInfo] = useState({\n        picture: '',\n        provider: 'origin',\n        nickName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n    });\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [isLogin, setIsLogin] = useState({\n        isLogin: false,\n    });\n    const history = useHistory();\n\n    const loginHandler = () => {\n        setIsLogin(true);\n    };\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            // !signupInfo.picture ||\n            !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.phoneNumber\n        ) {\n            setErrorMessage(true);\n            console.log(signupInfo);\n        } else {\n            console.log(signupInfo);\n            axios\n                .post(\n                    'http://localhost:80/signup',\n                    {\n                        profile_img: 'signupInfo.picture',\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        phoneNumber: signupInfo.phoneNumber,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                    console.log('eeeeeee');\n                });\n        }\n    };\n    return (\n        <>\n            <div className=\"back\">\n                <div className=\"signupModal\">\n                    <Link to=\"/\" className=\"closeB\">\n                        X\n                    </Link>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <div className=\"modalContents\">\n                            <img className=\"signUpIcon\" />\n                            <h1>Sign Up</h1>\n                            <div>모든 항목은 필수입니다.</div>\n                            <input\n                                name=\"email\"\n                                className=\"signUpId\"\n                                type=\"email\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"signUpPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.password}\n                            />\n                            <input\n                                name=\"nickName\"\n                                className=\"signUpNickName\"\n                                type=\"text\"\n                                placeholder=\"nickname\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.nickName}\n                            />\n                            <input\n                                name=\"phoneNumber\"\n                                className=\"signUpMobile\"\n                                type=\"tel\"\n                                placeholder=\"-없이 숫자만 입력하세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.phoneNumber}\n                            />\n                            <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                            <input\n                                name=\"picture\"\n                                className=\"signUpPic\"\n                                type=\"file\"\n                                placeholder=\"picture\"\n                                onChange={fileEvent}\n                                value={signupInfo.picture}\n                            />\n                            <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                {' '}\n                                회원가입\n                            </button>\n                            <div className=\"loginLine\">\n                                이미 아이디가 있으신가요?\n                                <Link to=\"/\">로그인</Link>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignupPage;\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/SignUpBtn.js",[],["125","126"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/SideBar/SideBar.js",["127"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/LoginBtn.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/LoginModal.js",["128"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './LoginModal.css';\n\nfunction Login({ isOpen, close, loginHandler }) {\n    const [loginInfo, setLoginInfo] = useState({\n        email: '',\n        password: '',\n    });\n\n    const inputHandler = (e) => {\n        setLoginInfo({ ...loginInfo, [e.target.name]: e.target.value });\n    };\n\n    const loginRequestHandler = () => {\n        axios\n            .post(\n                'https://localhost:4000/login',\n                {\n                    email: loginInfo.email,\n                    password: loginInfo.password,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            )\n            .then((res) => {\n                if (res.message === 'ok') {\n                    return loginHandler(res.cookies);\n                }\n            })\n            .catch((err) => alert(err));\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"modal\">\n                    <div className=\"loginModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n\n                        <div className=\"modalContents\">\n                            <span className=\"title\">Login</span>\n                            <input\n                                name=\"email\"\n                                className=\"loginId\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"loginPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={loginInfo.password}\n                            />\n                            <button className=\"loginBtn\" onClick={loginRequestHandler}>\n                                로그인\n                            </button>\n                            <button className=\"kakaoBtn\">\n                                <img\n                                    className=\"kakaoLogo\"\n                                    src=\"https://developers.kakao.com/tool/resource/static/img/button/kakaolink/kakaolink_btn_medium.png\"\n                                />\n                                <div className=\"kakaoText\">카카오 계정으로 가입</div>\n                            </button>\n                            <div className=\"signUpLine\">\n                                회원이 아니신가요?\n                                <Link to=\"/signup\" onClick={close}>\n                                    회원가입\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Login;\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/modals/SignUpModal.js",["129","130"],"import React, { useState } from 'react';\nimport '../../pages/SignUp/SignUp.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup({ isOpen, close, loginHandler }) {\n    const [signupInfo, setSignupInfo] = useState({\n        picture: '',\n        provider: '',\n        nickName: '',\n        email: '',\n        password: '',\n        mobile: '',\n    });\n    const [errorMessage, setErrorMessage] = useState(false);\n\n    const history = useHistory();\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            !signupInfo.picture ||\n            !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.mobile\n        ) {\n            setErrorMessage(true);\n        } else {\n            axios\n                .post(\n                    'https://localhost:4000/signup',\n                    {\n                        picture: signupInfo.picture,\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        mobile: signupInfo.mobile,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                });\n        }\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"ModalBack\">\n                    <div className=\"signupModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"modalContents\">\n                                <img className=\"signUpIcon\" />\n                                <span className=\"title\">Sign Up</span>\n                                <div>모든 항목은 필수입니다.</div>\n                                <input\n                                    name=\"email\"\n                                    className=\"signUpId\"\n                                    type=\"email\"\n                                    placeholder=\"email\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.email}\n                                />\n                                <input\n                                    name=\"password\"\n                                    className=\"signUpPw\"\n                                    type=\"password\"\n                                    placeholder=\"password\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.password}\n                                />\n                                <input\n                                    name=\"nickName\"\n                                    className=\"signUpNickName\"\n                                    type=\"text\"\n                                    placeholder=\"nickname\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.nickName}\n                                />\n                                <input\n                                    name=\"mobile\"\n                                    className=\"signUpMobile\"\n                                    type=\"tel\"\n                                    placeholder=\"-없이 숫자만 입력하세요\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.mobile}\n                                />\n                                <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                                <input\n                                    name=\"picture\"\n                                    className=\"signUpPic\"\n                                    type=\"file\"\n                                    placeholder=\"picture\"\n                                    onChange={(e) => fileEvent(e)}\n                                    value={signupInfo.picture}\n                                />\n                                <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                    {' '}\n                                    회원가입\n                                </button>\n                                <div className=\"loginLine\"></div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Signup;\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/search/SearchBtn.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/search/Search.js",["131"],"import React, { useState } from 'react';\n\nexport default function Search({ isOpen, close }) {\n    return (\n        <>\n            {isOpen ? (\n                <div className=\"searchModal\">\n                    <div>\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n// 콘텐츠 정보를 받고\n// 그걸 검색어랑 비교해서 없으면 검색 없음.\n//\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Tab/Tab.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js",["132","133"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport Thumbnail from '../../components/Thumbnail/Thumbnail';\n\nexport default function Mycontent(props) {\n    const info = props.userInfo;\n    const [contentList, setContentList] = useState([]);\n    const [auth, setAuth] = useState('');\n\n    const getContentList = () => {\n        axios.get('https://localhost:4000/content').then((res) => {\n            setContentList(res.data.content);\n        });\n    };\n    const filteredContents = contentList.filter((el) => {\n        return el.writer.id === info.nickName;\n    });\n    getContentList();\n    return (\n        <>\n            <h1>안녕하세요 info.name님</h1>\n            <div>\n                <ul>\n                    {filteredContents.map((list) => {\n                        <li>\n                            <Thumbnail list={list} auth={auth}></Thumbnail>\n                        </li>;\n                    })}\n                </ul>\n            </div>\n        </>\n    );\n}\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js",["134","135","136"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Mypage.css';\n\nexport default function MypageDetail(props) {\n    const info = props.data.userInfo;\n    const [isClick, setIsClick] = useState(false);\n    const [patchInfo, setPatchInfo] = useState({\n        nickName: '',\n        email: '',\n        password: '',\n        profile_img: '',\n        phone: '', // 초기값에 info.data.userInfo\n    });\n    const clickHandler = () => {\n        setIsClick(!isClick);\n    };\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setPatchInfo({ ...patchInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setPatchInfo({ ...patchInfo, [e.target.name]: e.target.value });\n    };\n    const patchRequestHandler = () => {\n        if (\n            !patchInfo.nickname ||\n            !patchInfo.email ||\n            !patchInfo.password ||\n            !patchInfo.profile_img ||\n            !patchInfo.phone\n        ) {\n        } else {\n            axios.patch(\n                'https://localhost:4000/user/:id',\n                {\n                    nickName: patchInfo.nickName,\n                    email: patchInfo.email,\n                    password: patchInfo.password,\n                    profile_img: patchInfo.profile_img,\n                    phone: patchInfo.phone,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            ); // 또 뭐 담아야하징 헤더 auth?\n        }\n    };\n\n    return (\n        <>\n            {isClick ? (\n                <form>\n                    <h1>안녕하세요 info.name님</h1>\n                    <div className=\"pf-input-area\">\n                        <a className=\"profile_img\">\n                            <div className=\"label\">프로필 사진</div>\n                            <input\n                                name=\"profile_img\"\n                                type=\"file\"\n                                className=\"avatar\"\n                                onChange={(e) => fileEvent(e)}\n                                value={patchInfo.profile_img}></input>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div>info.id</div>\n                        </div>\n                        <div className=\"password\">\n                            <div className=\"label\">비밀번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"비밀번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.password}></input>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"nickName\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"닉네임을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.nickName}></input>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"email\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"이메일을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.email}></input>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"phone\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"전화번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.phone}></input>\n                        </div>\n                        <input type=\"submit\" value=\"저장\" onClick={patchRequestHandler} />\n                    </div>\n                </form>\n            ) : (\n                <div>\n                    <h1>안녕하세요 info.nickName님</h1>\n                    <div className=\"pfArea\">\n                        <a className=\"pfImg\">\n                            <div className=\"label\">프로필 사진</div>\n                            <div type=\"file\" className=\"avatar\">\n                                이미지\n                            </div>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div className=\"id\">info.id</div>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <div>info.nickName</div>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <div>info.email</div>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <div>info.phone</div>\n                        </div>\n                    </div>\n                    <button classname=\"editBtn\" onClick={clickHandler}>\n                        수정\n                    </button>\n                </div>\n            )}\n        </>\n    );\n}\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Search/SearchBtn.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/LoginBtn.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js",[],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Search/Search.js",["137"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/LoginModal.js",["138"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Modals/SignUpModal.js",["139"],"import React, { useState } from 'react';\nimport '../../pages/SignUp/SignUp.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup({ isOpen, close, loginHandler }) {\n    const [signupInfo, setSignupInfo] = useState({\n        profile_img: '',\n        provider: '',\n        nickName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n    });\n\n    const history = useHistory();\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.profile_img });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            // !signupInfo.profile_img ||\n            // !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.phoneNumber\n        ) {\n        } else {\n            axios\n                .post(\n                    'https://localhost:80/signup',\n                    {\n                        profile_img: 'dddd',\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        phoneNumber: signupInfo.phoneNumber,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                });\n        }\n    };\n    return (\n        <>\n            {isOpen === true ? (\n                <div className=\"ModalBack\">\n                    <div className=\"signupModal\">\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"modalContents\">\n                                <img className=\"signUpIcon\" />\n                                <span className=\"title\">Sign Up</span>\n                                <div>모든 항목은 필수입니다.</div>\n                                <input\n                                    name=\"email\"\n                                    className=\"signUpId\"\n                                    type=\"email\"\n                                    placeholder=\"email\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.email}\n                                />\n                                <input\n                                    name=\"password\"\n                                    className=\"signUpPw\"\n                                    type=\"password\"\n                                    placeholder=\"password\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.password}\n                                />\n                                <input\n                                    name=\"nickName\"\n                                    className=\"signUpNickName\"\n                                    type=\"text\"\n                                    placeholder=\"nickname\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.nickName}\n                                />\n                                <input\n                                    name=\"phoneNumber\"\n                                    className=\"signUpMobile\"\n                                    type=\"tel\"\n                                    placeholder=\"-없이 숫자만 입력하세요\"\n                                    onChange={(e) => inputHandler(e)}\n                                    value={signupInfo.phoneNumber}\n                                />\n                                <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                                <input\n                                    name=\"profile_img\"\n                                    className=\"signUpPic\"\n                                    type=\"file\"\n                                    onChange={fileEvent}\n                                    value={signupInfo.profile_img}\n                                />\n                                <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                    {' '}\n                                    회원가입\n                                </button>\n                                <div className=\"loginLine\"></div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n\nexport default Signup;\n","/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Nav/Nav.js",["140","141","142","143","144"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js",["145","146","147","148"],"/Users/eunbin/Documents/project/THE-TOOPYO/client/src/pages/NewContent/NewContent.js",["149","150","151","152"],"import axios from 'axios';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NewContent.css';\n\nfunction NewContent() {\n    const [information, setInformation] = useState({\n        title: '',\n        description: '',\n        picture_1: '',\n        picture_2: '',\n        votingDeadLine: '',\n    });\n\n    const [isErr, setIsErr] = useState(false);\n    const isErrHandler = () => {\n        setIsErr(isErr ? false : true);\n    };\n\n    const handleInputValue = (key) => (e) => {\n        setInformation({ ...information, [key]: e.target.value });\n    };\n\n    const uploadHandler = () => {\n        if (\n            !information.title ||\n            !information.description ||\n            !information.picture_1 ||\n            !information.picture_2 ||\n            !information.votingDeadLine\n        ) {\n            return;\n        }\n        axios\n            .post('https://localhost:4000/content', {\n                userId: '',\n                title: information.title,\n                picture_1: information.picture_1,\n                picture_2: information.picture_2,\n                description: information.description,\n                votingDeadLine: information.votingDeadLine,\n            })\n            .then((res) => {\n                if (res.message === 'please rewrite') return isErrHandler();\n            });\n    };\n\n    return (\n        <div id=\"inner\">\n            <h1 id=\"newTitle\">새 글 작성</h1>\n            {isErr ? (\n                <div className=\"errMsg\" onClick={setIsErr}>\n                    모든 항목을 채워서 다시 입력해주세요.\n                </div>\n            ) : null}\n            <form action=\"\" method=\"post\">\n                {/*action=\"데이터보낼 서버의 파일\"*/}\n                <input\n                    className=\"title\"\n                    maxlength=\"20\"\n                    autoFocus\n                    required\n                    placeholder=\"제목을 입력하세요\"\n                    onChange={handleInputValue}></input>\n                <button type=\"submit\" onClick={uploadHandler}>\n                    <img\n                        src=\"https://cdn.discordapp.com/attachments/881710985335934979/881719851356409896/verify.png\"\n                        id=\"NewSubmit\"></img>\n                </button>\n                <div className=\"NewContentFrame\">\n                    <div className=\"pic Left\">\n                        <img className=\"picBg\"></img>\n                        <input id=\"pic_1\" type=\"file\"></input>\n                    </div>\n                    {/* <progress id=\"uploadPic_1\" max=\"100\"></progress> */}\n                    <div className=\"pic Right\">\n                        <img className=\"picBg\" src=\"\"></img>\n                        <input id=\"pic_2\" type=\"file\"></input>\n                    </div>\n                    <input className=\"NewDesc\" type=\"text\" placeholder=\"설명을 입력해주세요.\"></input>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default NewContent;\n",{"ruleId":"153","severity":1,"message":"154","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":23},{"ruleId":"153","severity":1,"message":"157","line":3,"column":25,"nodeType":"155","messageId":"156","endLine":3,"endColumn":30},{"ruleId":"153","severity":1,"message":"158","line":3,"column":32,"nodeType":"155","messageId":"156","endLine":3,"endColumn":38},{"ruleId":"153","severity":1,"message":"159","line":3,"column":40,"nodeType":"155","messageId":"156","endLine":3,"endColumn":44},{"ruleId":"153","severity":1,"message":"160","line":3,"column":40,"nodeType":"155","messageId":"156","endLine":3,"endColumn":48},{"ruleId":"153","severity":1,"message":"161","line":3,"column":50,"nodeType":"155","messageId":"156","endLine":3,"endColumn":59},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"153","severity":1,"message":"166","line":17,"column":11,"nodeType":"155","messageId":"156","endLine":17,"endColumn":19},{"ruleId":"153","severity":1,"message":"167","line":26,"column":11,"nodeType":"155","messageId":"156","endLine":26,"endColumn":22},{"ruleId":"153","severity":1,"message":"168","line":15,"column":12,"nodeType":"155","messageId":"156","endLine":15,"endColumn":24},{"ruleId":"153","severity":1,"message":"169","line":16,"column":12,"nodeType":"155","messageId":"156","endLine":16,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":79,"column":29,"nodeType":"172","endLine":79,"endColumn":59},{"ruleId":"162","replacedBy":"173"},{"ruleId":"164","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":20,"column":17,"nodeType":"172","endLine":20,"endColumn":64},{"ruleId":"170","severity":1,"message":"171","line":64,"column":33,"nodeType":"172","endLine":67,"endColumn":35},{"ruleId":"153","severity":1,"message":"168","line":15,"column":12,"nodeType":"155","messageId":"156","endLine":15,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":71,"column":33,"nodeType":"172","endLine":71,"endColumn":63},{"ruleId":"153","severity":1,"message":"177","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"178","line":8,"column":18,"nodeType":"155","messageId":"156","endLine":8,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":24,"column":50,"nodeType":"181","messageId":"182","endLine":24,"endColumn":52},{"ruleId":"153","severity":1,"message":"183","line":6,"column":11,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":58,"column":25,"nodeType":"172","endLine":58,"endColumn":52},{"ruleId":"175","severity":1,"message":"176","line":121,"column":25,"nodeType":"172","endLine":121,"endColumn":46},{"ruleId":"153","severity":1,"message":"184","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":64,"column":33,"nodeType":"172","endLine":67,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":70,"column":33,"nodeType":"172","endLine":70,"endColumn":63},{"ruleId":"153","severity":1,"message":"177","line":1,"column":10,"nodeType":"155","messageId":"156","endLine":1,"endColumn":18},{"ruleId":"153","severity":1,"message":"158","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":16},{"ruleId":"153","severity":1,"message":"157","line":2,"column":18,"nodeType":"155","messageId":"156","endLine":2,"endColumn":23},{"ruleId":"153","severity":1,"message":"160","line":2,"column":25,"nodeType":"155","messageId":"156","endLine":2,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":16,"column":25,"nodeType":"172","endLine":18,"endColumn":118},{"ruleId":"153","severity":1,"message":"159","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":23,"column":17,"nodeType":"172","endLine":23,"endColumn":65},{"ruleId":"170","severity":1,"message":"171","line":28,"column":17,"nodeType":"172","endLine":28,"endColumn":65},{"ruleId":"185","severity":1,"message":"186","line":37,"column":1,"nodeType":"187","messageId":"188","endLine":97,"endColumn":2},{"ruleId":"153","severity":1,"message":"159","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":66,"column":21,"nodeType":"172","endLine":68,"endColumn":40},{"ruleId":"170","severity":1,"message":"171","line":72,"column":25,"nodeType":"172","endLine":72,"endColumn":48},{"ruleId":"170","severity":1,"message":"171","line":77,"column":25,"nodeType":"172","endLine":77,"endColumn":55},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"'getAgree' is assigned a value but never used.","'getDisagree' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'isLogin' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["189"],["190"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'setAuth' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'info' is assigned a value but never used.","'axios' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]