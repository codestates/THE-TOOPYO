[{"/Users/suksangmin/THE-TOOPYO/client/src/index.js":"1","/Users/suksangmin/THE-TOOPYO/client/src/App.js":"2","/Users/suksangmin/THE-TOOPYO/client/src/components/Nav/Nav.js":"3","/Users/suksangmin/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js":"4","/Users/suksangmin/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js":"5","/Users/suksangmin/THE-TOOPYO/client/src/pages/CurContent/CurContent.js":"6","/Users/suksangmin/THE-TOOPYO/client/src/pages/NewContent/NewContent.js":"7","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mypage.js":"8","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/SideBar.js":"9","/Users/suksangmin/THE-TOOPYO/client/src/components/Tab/Tab.js":"10","/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js":"11","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js":"12","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js":"13","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginBtn.js":"14","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js":"15","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpModal.js":"16","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginModal.js":"17","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchBtn.js":"18","/Users/suksangmin/THE-TOOPYO/client/src/components/Search/Search.js":"19"},{"size":354,"mtime":1630025556432,"results":"20","hashOfConfig":"21"},{"size":2128,"mtime":1630292531650,"results":"22","hashOfConfig":"21"},{"size":1773,"mtime":1630291912465,"results":"23","hashOfConfig":"21"},{"size":3733,"mtime":1630291912466,"results":"24","hashOfConfig":"21"},{"size":5365,"mtime":1630261415402,"results":"25","hashOfConfig":"21"},{"size":4055,"mtime":1630291912467,"results":"26","hashOfConfig":"21"},{"size":3031,"mtime":1630291912467,"results":"27","hashOfConfig":"21"},{"size":206,"mtime":1630165627495,"results":"28","hashOfConfig":"21"},{"size":1783,"mtime":1630291912466,"results":"29","hashOfConfig":"21"},{"size":1535,"mtime":1630052289187,"results":"30","hashOfConfig":"21"},{"size":223,"mtime":1630052289187,"results":"31","hashOfConfig":"21"},{"size":6418,"mtime":1630165627495,"results":"32","hashOfConfig":"21"},{"size":998,"mtime":1630258818402,"results":"33","hashOfConfig":"21"},{"size":606,"mtime":1630258818388,"results":"34","hashOfConfig":"21"},{"size":583,"mtime":1630165627494,"results":"35","hashOfConfig":"21"},{"size":5204,"mtime":1630292529243,"results":"36","hashOfConfig":"21"},{"size":3272,"mtime":1630292530541,"results":"37","hashOfConfig":"21"},{"size":1322,"mtime":1630178107781,"results":"38","hashOfConfig":"21"},{"size":2997,"mtime":1630260158640,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"c0y8jf",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/Users/suksangmin/THE-TOOPYO/client/src/index.js",["88","89","90"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n",["91","92"],"/Users/suksangmin/THE-TOOPYO/client/src/App.js",["93","94"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Nav/Nav.js",["95","96","97","98","99"],"import { useState } from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport './Nav.css';\nimport LoginButton from '../Modals/LoginBtn';\nimport SignUpButton from '../Modals/SignUpBtn';\nimport Sidebar from '../SideBar/SideBar';\nimport SearchButton from '../Search/SearchBtn';\n\nfunction Nav({ isLogin, loginHandler }) {\n    return (\n        <nav>\n            <div className=\"navInner\">\n                <Sidebar />\n                <div className=\"logoContainer\">\n                    <h1>\n                        <img className=\"logo\" src=\"\"></img>\n                    </h1>\n                </div>\n                <div>\n                    <ul className=\"buttonContainer\">\n                        <li>\n                            <SearchButton />\n                        </li>\n                        <li>\n                            <Link to=\"/NewContent\">\n                                <button className=\"newContentBtn navBtn\">새 글 작성</button>\n                            </Link>\n                        </li>{' '}\n                        <li>\n                            <SignUpButton loginHandler={loginHandler} />\n                        </li>\n                        {isLogin ? (\n                            <li>\n                                <Link to=\"/Mypage\">\n                                    <button className=\"navBtn\">my page</button>\n                                </Link>\n                            </li>\n                        ) : (\n                            <div>\n                                <LoginButton loginHandler={loginHandler} />\n                            </div>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\nexport default Nav;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Thumbnail/Thumbnail.js",["100","101","102","103"],"import './Thumbnail.css';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport CurContent from '../../pages/CurContent/CurContent';\n\nfunction Thumbnail({ list, auth }) {\n    const [content, setContent] = useState({}); // 게시글 정보\n    const [writer, setWriter] = useState({}); // 작성자 정보\n\n    const getContentDetail = () => {\n        axios.get(`https://localhost:80/content/:${list.id}`).then((res) => {\n            //console.log(res.data);\n            setContent(res.data.content);\n            setWriter(res.data.writer);\n            return <CurContent auth={auth} content={content} writer={writer} id={list.id}></CurContent>;\n        });\n    };\n\n    return (\n        <div>\n            <div className=\"container\" onClick={getContentDetail}>\n                <h1 className=\"thumbTitle\">{list.title}title</h1>\n                <img className=\"picture_1\" src={list.picture_1}></img>\n                <img\n                    id=\"versus\"\n                    src=\"https://cdn.discordapp.com/attachments/881710985335934979/881711027425787914/vs.png\"\n                    alt=\"versus\"></img>\n                <img className=\"picture_2\" src={list.picture_2}></img>\n                <div className=\"descript\">{list.description}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Thumbnail;\n\n{\n    /* <div id=\"inner\">\n    <div id=\"mainBanner\"></div>\n    <div className=\"app-thumb-entire\">\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfa<br></br>lsxmdetjfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsx<br></br>mdetjfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsxmde<br></br>tjfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsxmdet<br></br>jfdualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfgfalsxmdetjfd<br></br>ualkfdkfbvfbfbfgfalsxmdetjfdual\n            </div>\n        </div>\n        <div className=\"container\">\n            <h1 className=\"thumbTitle\">title</h1>\n            <div className=\"picture_1\"></div>\n            <span>vs</span>\n            <div className=\"picture_2\"></div>\n            <div className=\"descript\">\n                alsxmdetjfdualkfdkfbvfbfbfg<br></br>falsxmdetjfdualkfdkfbvfbfbfgfalsxmdetjfdua\n            </div>\n        </div>\n    </div>\n</div>; */\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/SignUp/SignUpPage.js",["104","105","106"],"import React, { useState } from 'react';\nimport './SignUp.css';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction SignupPage() {\n    const [signupInfo, setSignupInfo] = useState({\n        picture: '',\n        provider: 'origin',\n        nickName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n    });\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [isLogin, setIsLogin] = useState({\n        isLogin: false,\n    });\n    const history = useHistory();\n\n    const loginHandler = () => {\n        setIsLogin(true);\n    };\n\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setSignupInfo({ ...signupInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setSignupInfo({ ...signupInfo, [e.target.name]: e.target.value });\n    };\n\n    const signUpRequestHandler = () => {\n        if (\n            // !signupInfo.picture ||\n            !signupInfo.provider ||\n            !signupInfo.nickName ||\n            !signupInfo.email ||\n            !signupInfo.password ||\n            !signupInfo.phoneNumber\n        ) {\n            setErrorMessage(true);\n            console.log(signupInfo);\n        } else {\n            console.log(signupInfo);\n            axios\n                .post(\n                    'http://localhost:80/signup',\n                    {\n                        profile_img: 'signupInfo.picture',\n                        provider: signupInfo.provider,\n                        nickName: signupInfo.nickName,\n                        email: signupInfo.email,\n                        password: signupInfo.password,\n                        phoneNumber: signupInfo.phoneNumber,\n                    },\n                    { 'Content-Type': 'application/json', withCredentials: true },\n                )\n                .then((res) => {\n                    history.push('/');\n                    if (res.message === 'ok') return loginHandler(true);\n                    console.log('eeeeeee');\n                });\n        }\n    };\n    return (\n        <>\n            <div className=\"back\">\n                <div className=\"signupModal\">\n                    <Link to=\"/\" className=\"closeB\">\n                        X\n                    </Link>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <div className=\"modalContents\">\n                            <img className=\"signUpIcon\" />\n                            <h1>Sign Up</h1>\n                            <div>모든 항목은 필수입니다.</div>\n                            <input\n                                name=\"email\"\n                                className=\"signUpId\"\n                                type=\"email\"\n                                placeholder=\"email\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.email}\n                            />\n                            <input\n                                name=\"password\"\n                                className=\"signUpPw\"\n                                type=\"password\"\n                                placeholder=\"password\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.password}\n                            />\n                            <input\n                                name=\"nickName\"\n                                className=\"signUpNickName\"\n                                type=\"text\"\n                                placeholder=\"nickname\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.nickName}\n                            />\n                            <input\n                                name=\"phoneNumber\"\n                                className=\"signUpMobile\"\n                                type=\"tel\"\n                                placeholder=\"-없이 숫자만 입력하세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={signupInfo.phoneNumber}\n                            />\n                            <div className=\"profileUploader\">프로필 사진을 선택하세요.</div>\n                            <input\n                                name=\"picture\"\n                                className=\"signUpPic\"\n                                type=\"file\"\n                                placeholder=\"picture\"\n                                onChange={fileEvent}\n                                value={signupInfo.picture}\n                            />\n                            <button className=\"signUpB\" onClick={signUpRequestHandler}>\n                                회원가입\n                            </button>\n                            <div className=\"loginLine\">\n                                이미 아이디가 있으신가요?\n                                <Link to=\"/\">로그인</Link>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignupPage;\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/CurContent/CurContent.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/pages/NewContent/NewContent.js",["107","108","109","110"],"import axios from 'axios';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NewContent.css';\n\nfunction NewContent() {\n    const [information, setInformation] = useState({\n        title: '',\n        description: '',\n        picture_1: '',\n        picture_2: '',\n        votingDeadLine: '',\n    });\n\n    const [isErr, setIsErr] = useState(false);\n    const isErrHandler = () => {\n        setIsErr(isErr ? false : true);\n    };\n\n    const handleInputValue = (key) => (e) => {\n        setInformation({ ...information, [key]: e.target.value });\n    };\n\n    const uploadHandler = () => {\n        if (\n            !information.title ||\n            !information.description ||\n            !information.picture_1 ||\n            !information.picture_2 ||\n            !information.votingDeadLine\n        ) {\n            return;\n        }\n        axios\n            .post('https://localhost:4000/content', {\n                userId: '',\n                title: information.title,\n                picture_1: information.picture_1,\n                picture_2: information.picture_2,\n                description: information.description,\n                votingDeadLine: information.votingDeadLine,\n            })\n            .then((res) => {\n                if (res.message === 'please rewrite') return isErrHandler();\n            });\n    };\n\n    return (\n        <div id=\"inner\">\n            <h1 id=\"newTitle\">새 글 작성</h1>\n            {isErr ? (\n                <div className=\"errMsg\" onClick={setIsErr}>\n                    모든 항목을 채워서 다시 입력해주세요.\n                </div>\n            ) : null}\n            <form action=\"\" method=\"post\">\n                {/*action=\"데이터보낼 서버의 파일\"*/}\n                <input\n                    className=\"title\"\n                    maxlength=\"20\"\n                    autoFocus\n                    required\n                    placeholder=\"제목을 입력하세요\"\n                    onChange={handleInputValue}></input>\n                <button type=\"submit\" onClick={uploadHandler}>\n                    <img\n                        src=\"https://cdn.discordapp.com/attachments/881710985335934979/881719851356409896/verify.png\"\n                        id=\"NewSubmit\"></img>\n                </button>\n                <div className=\"NewContentFrame\">\n                    <div className=\"pic Left\">\n                        <img className=\"picBg\"></img>\n                        <input id=\"pic_1\" type=\"file\"></input>\n                    </div>\n                    {/* <progress id=\"uploadPic_1\" max=\"100\"></progress> */}\n                    <div className=\"pic Right\">\n                        <img className=\"picBg\" src=\"\"></img>\n                        <input id=\"pic_2\" type=\"file\"></input>\n                    </div>\n                    <input className=\"NewDesc\" type=\"text\" placeholder=\"설명을 입력해주세요.\"></input>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default NewContent;\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mypage.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/SideBar.js",["111"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SidebarItem from './Sidebaritem';\nimport './SideBar.css';\n\nfunction Sidebar() {\n    const menus = [\n        { name: '홈', path: '/' },\n        { name: '회원가입', path: '/signup' },\n        { name: '새 글 작성', path: '/content' },\n        { name: '로그인', path: '/login' },\n    ];\n    const [isOpen, setisOpen] = useState(false);\n    const sidebarHandler = () => {\n        setisOpen(!isOpen);\n    };\n    return (\n        <div className=\"sidebar\">\n            <div class=\"btn-menu\">\n                <a class=\"sidebarBtn\" onClick={sidebarHandler}>\n                    <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 14\" fill=\"none\">\n                        <rect width=\"18\" height=\"2\" fill=\"white\"></rect>\n                        <rect x=\"6\" y=\"6\" width=\"12\" height=\"2\" fill=\"white\"></rect>\n                        <rect y=\"12\" width=\"18\" height=\"2\" fill=\"white\"></rect>\n                    </svg>\n                </a>\n            </div>\n            {isOpen === true ? (\n                <div className=\"sidebarBack\" onClick={sidebarHandler}>\n                    <div className=\"sidebarContents\">\n                        <button className=\"sidebarCloseBtn\" onClick={sidebarHandler}>\n                            X\n                        </button>\n                        {menus.map((menu, index) => {\n                            return (\n                                <Link to={menu.path} key={index}>\n                                    <SidebarItem menu={menu} />\n                                </Link>\n                            );\n                        })}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n}\nexport default Sidebar;\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Tab/Tab.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/SideBar/Sidebaritem.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/MypageDetail.js",["112","113","114"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Mypage.css';\n\nexport default function MypageDetail(props) {\n    const info = props.data.userInfo;\n    const [isClick, setIsClick] = useState(false);\n    const [patchInfo, setPatchInfo] = useState({\n        nickName: '',\n        email: '',\n        password: '',\n        profile_img: '',\n        phone: '', // 초기값에 info.data.userInfo\n    });\n    const clickHandler = () => {\n        setIsClick(!isClick);\n    };\n    const fileEvent = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setPatchInfo({ ...patchInfo, [e.target.name]: e.target.picture });\n            console.log('파일 업로드 완료.');\n        };\n        reader.readAsText(e.target.files[0]);\n    };\n    const inputHandler = (e) => {\n        setPatchInfo({ ...patchInfo, [e.target.name]: e.target.value });\n    };\n    const patchRequestHandler = () => {\n        if (\n            !patchInfo.nickname ||\n            !patchInfo.email ||\n            !patchInfo.password ||\n            !patchInfo.profile_img ||\n            !patchInfo.phone\n        ) {\n        } else {\n            axios.patch(\n                'https://localhost:4000/user/:id',\n                {\n                    nickName: patchInfo.nickName,\n                    email: patchInfo.email,\n                    password: patchInfo.password,\n                    profile_img: patchInfo.profile_img,\n                    phone: patchInfo.phone,\n                },\n                { 'Content-Type': 'application/json', withCredentials: true },\n            ); // 또 뭐 담아야하징 헤더 auth?\n        }\n    };\n\n    return (\n        <>\n            {isClick ? (\n                <form>\n                    <h1>안녕하세요 info.name님</h1>\n                    <div className=\"pf-input-area\">\n                        <a className=\"profile_img\">\n                            <div className=\"label\">프로필 사진</div>\n                            <input\n                                name=\"profile_img\"\n                                type=\"file\"\n                                className=\"avatar\"\n                                onChange={(e) => fileEvent(e)}\n                                value={patchInfo.profile_img}></input>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div>info.id</div>\n                        </div>\n                        <div className=\"password\">\n                            <div className=\"label\">비밀번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"비밀번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.password}></input>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"nickName\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"닉네임을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.nickName}></input>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"email\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"이메일을 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.email}></input>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <input\n                                className=\"inputBox\"\n                                name=\"phone\"\n                                type=\"text\"\n                                maxLength=\"20\"\n                                placeholder=\"전화번호를 입력해주세요\"\n                                onChange={(e) => inputHandler(e)}\n                                value={patchInfo.phone}></input>\n                        </div>\n                        <input type=\"submit\" value=\"저장\" onClick={patchRequestHandler} />\n                    </div>\n                </form>\n            ) : (\n                <div>\n                    <h1>안녕하세요 info.nickName님</h1>\n                    <div className=\"pfArea\">\n                        <a className=\"pfImg\">\n                            <div className=\"label\">프로필 사진</div>\n                            <div type=\"file\" className=\"avatar\">\n                                이미지\n                            </div>\n                        </a>\n                        <div className=\"id\">\n                            <div className=\"label\">아이디</div>\n                            <div className=\"id\">info.id</div>\n                        </div>\n                        <div className=\"nickName\">\n                            <div className=\"label\">닉네임</div>\n                            <div>info.nickName</div>\n                        </div>\n                        <div className=\"email\">\n                            <div className=\"label\">이메일</div>\n                            <div>info.email</div>\n                        </div>\n                        <div className=\"phone\">\n                            <div className=\"label\">전화번호</div>\n                            <div>info.phone</div>\n                        </div>\n                    </div>\n                    <button classname=\"editBtn\" onClick={clickHandler}>\n                        수정\n                    </button>\n                </div>\n            )}\n        </>\n    );\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/pages/Mypage/Mycontent.js",["115","116"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport Thumbnail from '../../components/Thumbnail/Thumbnail';\n\nexport default function Mycontent(props) {\n    const info = props.userInfo;\n    const [contentList, setContentList] = useState([]);\n    const [auth, setAuth] = useState('');\n\n    const getContentList = () => {\n        axios.get('https://localhost:4000/content').then((res) => {\n            setContentList(res.data.content);\n        });\n    };\n    const filteredContents = contentList.filter((el) => {\n        return el.writer.id === info.nickName;\n    });\n    getContentList();\n    return (\n        <>\n            <h1>안녕하세요 info.name님</h1>\n            <div>\n                <ul>\n                    {filteredContents.map((list) => {\n                        <li>\n                            <Thumbnail list={list} auth={auth}></Thumbnail>\n                        </li>;\n                    })}\n                </ul>\n            </div>\n        </>\n    );\n}\n","/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/SignUpModal.js",["117"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Modals/LoginModal.js",["118"],"/Users/suksangmin/THE-TOOPYO/client/src/components/Search/SearchBtn.js",[],"/Users/suksangmin/THE-TOOPYO/client/src/components/Search/Search.js",["119"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport './Search.css';\nimport Thumbnail from '../Thumbnail/Thumbnail';\n\nexport default function Search({ isOpen, close }) {\n    const filteredContent = (data) => {\n        data = data.filter((el) => {\n            return el.data.nickName.indexOf(searchKeyword) > -1;\n        });\n        return data.map((list) => {\n            return <Thumbnail list={list} />;\n        });\n    };\n    // 컨텐츠리스트를 데이터로 받아서 그걸 필터하고 맵걸어서 썸네일에 그 값을 넣어 출력하는 함수\n    // 저기에 리스트를 넣는게 맞는지 모르겠으나 앱 JS를 보고 일단 만듬.\n\n    const [contentList, setContentList] = useState([]);\n    const [searchKeyword, SetSearchKeyword] = useState('');\n    const inputHandler = (e) => {\n        SetSearchKeyword(([e.target.name] = e.target.value));\n    };\n    const searchRefresh = () => {\n        SetSearchKeyword('');\n    };\n    // 검색해서 리턴하고나면 검색어가 공백이 되게하는 리프레시 함수... 잘 될지 모르겠음.\n    // 이걸하면 모든 문자가 검색돼서 필터 걸리지않고 아마도 모든 게시물이 썸네일로 나올거임\n    const getContentList = () => {\n        axios.get('https://localhost:80/content').then((res) => {\n            setContentList(res.data.content);\n        });\n    };\n    getContentList();\n    return (\n        <>\n            {isOpen ? (\n                <div className=\"searchModal\">\n                    <div className=\"inputWrapper\">\n                        <svg width=\"4vw\" height=\"4vw\" viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path\n                                d=\"M12.3243 4.98201C14.3159 6.97369 14.3159 10.2028 12.3243 12.1945C10.3326 14.1862 7.10345 14.1862 5.11177 12.1945C3.1201 10.2028 3.1201 6.97369 5.11177 4.98201C7.10345 2.99034 10.3326 2.99034 12.3243 4.98201ZM14.8612 12.8929C16.9167 9.96687 16.6367 5.90038 14.0213 3.28496C11.0924 0.356024 6.34365 0.356024 3.41472 3.28496C0.485785 6.21389 0.485785 10.9626 3.41472 13.8916C6.07942 16.5563 10.2504 16.7967 13.1869 14.6127L17.8336 19.2595C18.3022 19.7281 19.062 19.7281 19.5307 19.2595C19.9993 18.7908 19.9993 18.031 19.5307 17.5624L14.8612 12.8929Z\"\n                                fill=\"#ccc\"></path>\n                        </svg>\n                        <input\n                            className=\"searchInput\"\n                            placeholder=\"검색하기\"\n                            name=\"searchKeyword\"\n                            onChange={inputHandler}\n                            value={searchKeyword}></input>\n                        <button className=\"closeBtn\" onClick={close}>\n                            X\n                        </button>\n                        <div>{contentList ? <div>{filteredContent(contentList)}</div> : '검색 결과가 없습니다.'}</div>\n                    </div>\n                </div>\n            ) : null}\n        </>\n    );\n}\n",{"ruleId":"120","severity":1,"message":"121","line":3,"column":25,"nodeType":"122","messageId":"123","endLine":3,"endColumn":30},{"ruleId":"120","severity":1,"message":"124","line":3,"column":32,"nodeType":"122","messageId":"123","endLine":3,"endColumn":38},{"ruleId":"120","severity":1,"message":"125","line":3,"column":40,"nodeType":"122","messageId":"123","endLine":3,"endColumn":44},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"120","severity":1,"message":"130","line":3,"column":40,"nodeType":"122","messageId":"123","endLine":3,"endColumn":48},{"ruleId":"120","severity":1,"message":"131","line":3,"column":50,"nodeType":"122","messageId":"123","endLine":3,"endColumn":59},{"ruleId":"120","severity":1,"message":"132","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":2,"column":18,"nodeType":"122","messageId":"123","endLine":2,"endColumn":23},{"ruleId":"120","severity":1,"message":"130","line":2,"column":25,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":16,"column":25,"nodeType":"135","endLine":16,"endColumn":54},{"ruleId":"120","severity":1,"message":"125","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":24,"column":17,"nodeType":"135","endLine":24,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":29,"column":17,"nodeType":"135","endLine":29,"endColumn":65},{"ruleId":"136","severity":1,"message":"137","line":38,"column":1,"nodeType":"138","messageId":"139","endLine":98,"endColumn":2},{"ruleId":"120","severity":1,"message":"140","line":15,"column":12,"nodeType":"122","messageId":"123","endLine":15,"endColumn":24},{"ruleId":"120","severity":1,"message":"141","line":16,"column":12,"nodeType":"122","messageId":"123","endLine":16,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":79,"column":29,"nodeType":"135","endLine":79,"endColumn":59},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":66,"column":21,"nodeType":"135","endLine":68,"endColumn":40},{"ruleId":"133","severity":1,"message":"134","line":72,"column":25,"nodeType":"135","endLine":72,"endColumn":48},{"ruleId":"133","severity":1,"message":"134","line":77,"column":25,"nodeType":"135","endLine":77,"endColumn":55},{"ruleId":"142","severity":1,"message":"143","line":20,"column":17,"nodeType":"135","endLine":20,"endColumn":64},{"ruleId":"120","severity":1,"message":"144","line":6,"column":11,"nodeType":"122","messageId":"123","endLine":6,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":58,"column":25,"nodeType":"135","endLine":58,"endColumn":52},{"ruleId":"142","severity":1,"message":"143","line":121,"column":25,"nodeType":"135","endLine":121,"endColumn":46},{"ruleId":"120","severity":1,"message":"145","line":8,"column":18,"nodeType":"122","messageId":"123","endLine":8,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":24,"column":50,"nodeType":"148","messageId":"149","endLine":24,"endColumn":52},{"ruleId":"133","severity":1,"message":"134","line":70,"column":33,"nodeType":"135","endLine":70,"endColumn":63},{"ruleId":"133","severity":1,"message":"134","line":64,"column":33,"nodeType":"135","endLine":67,"endColumn":35},{"ruleId":"120","severity":1,"message":"150","line":23,"column":11,"nodeType":"122","messageId":"123","endLine":23,"endColumn":24},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'Redirect' is defined but never used.","'useParams' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'errorMessage' is assigned a value but never used.","'isLogin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'info' is assigned a value but never used.","'setAuth' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'searchRefresh' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]